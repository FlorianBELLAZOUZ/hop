(js
  (*js* sci_JS_GLOBALS)
  (error sci_error)
  (putprop! sci_putProp)
  (getprop sci_getProp)
  (remprop! sci_remProp)
  (gensym sci_gensym)
  (eqv? sci_isEqv)
  (eq? sci_isEq)
  (equal? sci_isEqual)
  (number? sci_isNumber)
  (complex? sci_isComplex)
  (real? sci_isReal)
  (rational? sci_isRational)
  (integer? sci_isInteger)
  (exact? sci_isExact)
  (inexact? sci_isInexact)
  (= sci_equal)
  (=fx sci_equalFx)
  (< sci_less)
  (<fx sci_lessFx)
  (> sci_greater)
  (>fx sci_greaterFx)
  (<= sci_lessEqual)
  (<=fx sci_lessEqualFx)
  (>= sci_greaterEqual)
  (>=fx sci_greaterEqualFx)
  (zero? sci_isZero)
  (positive? sci_isPositive)
  (negative? sci_isNegative)
  (odd? sci_isOdd)
  (even? sci_isEven)
  (max sci_max)
  (min sci_min)
  (+ sci_plus)
  (+fx sci_plusFx)
  (* sci_multi)
  (*fx sci_multiFx)
  (- sci_minus)
  (-fx sci_minusFx)
  (/ sci_div)
  (abs sci_abs)
  (quotient sci_quotient)
  (/fx sci_divFx)
  (remainder sci_remainder)
  (modulo sci_modulo)
  (gcd sci_gcd)
  (lcm sci_lcm)
  (numerator sci_numerator)
  (denominator sci_denominator)
  (floor sci_floor)
  (ceiling sci_ceiling)
  (truncate sci_truncate)
  (round sci_round)
  (rationalize sci_rationalize)
  (exp sci_exp)
  (log sci_log)
  (sin sci_sin)
  (cos sci_cos)
  (tan sci_tan)
  (asin sci_asin)
  (acos sci_acos)
  (atan sci_atan)
  (sqrt sci_sqrt)
  (expt sci_expt)
  (exact->inexact sci_exact2inexact)
  (inexact->exact sci_inexact2exact)
  (number->symbol sci_number2symbol)
  (number->string sci_number2string)
  (string->number sci_string2number)
  (not sci_not)
  (boolean? sci_isBoolean)
  (pair? sci_isPair)
  (cons sci_cons)
  (car sci_car)
  (cdr sci_cdr)
  (set-car! sci_setCar)
  (set-cdr! sci_setCdr)
  (caar sci_caar)
  (cdar sci_cdar)
  (cadr sci_cadr)
  (cddr sci_cddr)
  (caaar sci_caaar)
  (cadar sci_cadar)
  (caadr sci_caadr)
  (caddr sci_caddr)
  (cdaar sci_cdaar)
  (cddar sci_cddar)
  (cdadr sci_cdadr)
  (cdddr sci_cdddr)
  (caaaar sci_caaaar)
  (caadar sci_caadar)
  (caaadr sci_caaadr)
  (caaddr sci_caaddr)
  (cadaar sci_cadaar)
  (caddar sci_caddar)
  (cadadr sci_cadadr)
  (cadddr sci_cadddr)
  (cdaaar sci_cdaaar)
  (cdadar sci_cdadar)
  (cdaadr sci_cdaadr)
  (cdaddr sci_cdaddr)
  (cddaar sci_cddaar)
  (cdddar sci_cdddar)
  (cddadr sci_cddadr)
  (cddddr sci_cddddr)
  (last-pair sci_lastPair)
  (null? sci_isNull)
  (list? sci_isList)
  (list sci_list)
  (make-list sci_makeList)
  (length sci_length)
  (append sci_append)
  (append! sci_destAppend)
  (reverse sci_reverse)
  (reverse! sci_destReverse)
  (list-tail sci_listTail)
  (list-ref sci_listRef)
  (memq sci_memq)
  (memv sci_memv)
  (member sci_member)
  (assq sci_assq)
  (assv sci_assv)
  (assoc sci_assoc)
  (symbol? sci_isSymbol)
  (symbol->string sci_symbol2string)
  (string->symbol sci_string2symbol)
  (symbol-append sci_symbolAppend)
  (char? sci_isChar)
  (char=? sci_isCharEqual)
  (char<? sci_isCharLess)
  (char>? sci_isCharGreater)
  (char<=? sci_isCharLessEqual)
  (char>=? sci_isCharGreaterEqual)
  (char-ci=? sci_isCharCIEqual)
  (char-ci<? sci_isCharCILess)
  (char-ci>? sci_isCharCIGreater)
  (char-ci<=? sci_isCharCILessEqual)
  (char-ci>=? sci_isCharCIGreaterEqual)
  (char-alphabetic? sci_isCharAlphabetic)
  (char-numeric? sci_isCharNumeric)
  (char-upper-case? sci_isCharUpperCase)
  (char-lower-case? sci_isCharLowerCase)
  (char->integer sci_char2integer)
  (integer->char sci_integer2char)
  (char-upcase sci_charUpcase)
  (char-downcase sci_charDowncase)
  (string? sci_isString)
  (make-string sci_makeString)
  (string sci_string)
  (string-length sci_stringLength)
  (string-ref sci_stringRef)
  (string-set! sci_stringSet)
  (string=? sci_isStringEqual)
  (string<? sci_isStringLess)
  (string>? sci_isStringGreater)
  (string<=? sci_isStringLessEqual)
  (string>=? sci_isStringGreaterEqual)
  (string-ci=? sci_isStringCIEqual)
  (string-ci<? sci_isStringCILess)
  (string-ci>? sci_isStringCIGreater)
  (string-ci<=? sci_isStringCILessEqual)
  (string-ci>=? sci_isStringCIGreaterEqual)
  (substring sci_substring)
  (string-append sci_stringAppend)
  (string->list sci_string2list)
  (list->string sci_list2string)
  (string-copy sci_stringCopy)
  (string-fill! sci_stringFill)
  (vector? sci_isVector)
  (make-vector sci_makeVector)
  (vector sci_vector)
  (vector-length sci_vectorLength)
  (vector-ref sci_vectorRef)
  (vector-set! sci_vectorSet)
  (vector->list sci_vector2list)
  (list->vector sci_list2vector)
  (vector-fill! sci_vectorFill)
  (procedure? sci_isProcedure)
  (apply sci_apply)
  (map sci_map)
  (for-each sci_forEach)
  (values sci_values)
  (call-with-values sci_callWithValues)
  (make-struct sci_makeStruct)
  (struct? sci_isStruct)
  (struct-named? sci_isStructNamed)
  (struct-field sci_getStructField)
  (struct-field-set! sci_setStructField)
  (js-field sci_jsField)
  (js-field-set! sci_setJsField)
  (js-field-delete! sci_deleteJsField)
  (js-call sci_jsCall)
  (js-method-call sci_jsMethodCall)
  (js-new sci_jsNew)
  (read sci_read)
  (read-char sci_readChar)
  (peek-char sci_peekChar)
  (char-ready? sci_isCharReady)
  (close-input-port sci_closeInputPort)
  (input-port? sci_isInputPort)
  (eof-object? sci_isEOFObject)
  (current-input-port sci_currentInputPort)
  (call-with-input-file sci_callWithInputFile)
  (call-with-output-file sci_callWithOutputFile)
  (with-input-from-file sci_withInputFromFile)
  (with-output-to-file sci_withOutputToFile)
  (open-input-file sci_openInputFile)
  (open-output-file sci_openOutputFile)
  (with-input-from-string sci_withInputFromString)
  (with-output-to-string sci_withOutputToString)
  (output-port? sci_isOutputPort)
  (close-output-port sci_closeOutputPort)
  (write sci_write)
  (display sci_display)
  (new-line sci_newLine)
  (write-char sci_writeChar)
  (write-circle sci_writeCircle)
  (print sci_print)
  (make-hashtable sci_makeHashtable)
  (hashtable-put! sci_hashtablePut)
  (hashtable-get sci_hashtableGet)
  (hashtable-for-each sci_hashtableForEach)
  (hashtable-contains? sci_hashtableContains)
  ;; MS: 21 march 2006
  (alert sc_alert)
  (typeof sc_typeof)
  (with-hop with_hop)
  (new sci_jsNew)
  ;; MS: pourquoi est-ce que les vecteurs Scheme en sont pas mappe's sur
  ;; des ARRAY JS ?
  (array sc_array)
  (array-length sc_arrayLength)
  (array-ref sc_arrayRef)
  (array-set! sc_arraySet)
)
