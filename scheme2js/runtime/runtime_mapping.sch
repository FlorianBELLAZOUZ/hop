(define *shared-runtime-var-mapping*
  '((hashtable-contains? sci_hashtableContains)
    (hashtable-for-each sci_hashtableForEach)
    (hashtable-get sci_hashtableGet)
    (hashtable-put! sci_hashtablePut)
    (make-hashtable sci_makeHashtable)
    (write-char sci_writeChar)
    (newline sci_newline)
    (close-output-port sci_closeOutputPort)
    (output-port? sci_isOutputPort)
    (open-output-file sci_openOutputFile)
    (open-input-file sci_openInputFile)
    (with-output-to-file sci_withOutputToFile)
    (with-input-from-file sci_withInputFromFile)
    (call-with-output-file sci_callWithOutputFile)
    (call-with-input-file sci_callWithInputFile)
    (current-input-port sci_currentInputPort)
    (eof-object? sci_isEOFObject)
    (input-port? sci_isInputPort)
    (close-input-port sci_closeInputPort)
    (char-ready? sci_isCharReady)
    (peek-char sci_peekChar)
    (read-char sci_readChar)
    (keyword? sci_isKeyword)
    (new sci_jsNew)
    (js-new sci_jsNew)
    (js-method-call sci_jsMethodCall)
    (js-call sci_jsCall)
    (js-field-delete! sci_deleteJsField)
    (js-field-set! sci_setJsField)
    (js-field sci_jsField)
    (bit-xor sci_bitXor)
    (bit-or sci_bitOr)
    (bit-and sci_bitAnd)
    (struct-field-set! sci_setStructField)
    (struct-field sci_getStructField)
    (struct-named? sci_isStructNamed)
    (struct? sci_isStruct)
    (make-struct sci_makeStruct)
    (call-with-values sci_callWithValues)
    (values sci_values)
    (for-each sci_forEach)
    (map sci_map)
    (apply sci_apply)
    (procedure? sci_isProcedure)
    (vector-fill! sci_vectorFill)
    (array-fill! sci_vectorFill)
    (list->vector sci_list2vector)
    (list->array sci_list2vector)
    (vector->list sci_vector2list)
    (array->list sci_vector2list)
    (vector-set! sci_vectorSet)
    (array-set! sci_vectorSet)
    (vector-ref sci_vectorRef)
    (array-ref sci_vectorRef)
    (vector-length sci_vectorLength)
    (array-length sci_vectorLength)
    (vector sci_vector)
    (array sci_vector)
    (make-vector sci_makeVector)
    (make-array sci_makeVector)
    (vector? sci_isVector)
    (array? sci_isVector)
    (char-downcase sci_charDowncase)
    (char-upcase sci_charUpcase)
    (integer->char sci_integer2char)
    (char->integer sci_char2integer)
    (char-lower-case? sci_isCharLowerCase)
    (char-upper-case? sci_isCharUpperCase)
    (char-numeric? sci_isCharNumeric)
    (char-alphabetic? sci_isCharAlphabetic)
    (char-ci>=? sci_isCharCIGreaterEqual)
    (char-ci<=? sci_isCharCILessEqual)
    (char-ci>? sci_isCharCIGreater)
    (char-ci<? sci_isCharCILess)
    (char-ci=? sci_isCharCIEqual)
    (char>=? sci_isCharGreaterEqual)
    (char<=? sci_isCharLessEqual)
    (char>? sci_isCharGreater)
    (char<? sci_isCharLess)
    (char=? sci_isCharEqual)
    (char? sci_isChar)
    (assoc sci_assoc)
    (assv sci_assv)
    (assq sci_assq)
    (member sci_member)
    (memv sci_memv)
    (memq sci_memq)
    (list-ref sci_listRef)
    (list-tail sci_listTail)
    (reverse! sci_destReverse)
    (reverse sci_reverse)
    (append! sci_destAppend)
    (append sci_append)
    (length sci_length)
    (make-list sci_makeList)
    (list sci_list)
    (list? sci_isList)
    (null? sci_isNull)
    (last-pair sci_lastPair)
    (cddddr sci_cddddr)
    (cddadr sci_cddadr)
    (cdddar sci_cdddar)
    (cddaar sci_cddaar)
    (cdaddr sci_cdaddr)
    (cdaadr sci_cdaadr)
    (cdadar sci_cdadar)
    (cdaaar sci_cdaaar)
    (cadddr sci_cadddr)
    (cadadr sci_cadadr)
    (caddar sci_caddar)
    (cadaar sci_cadaar)
    (caaddr sci_caaddr)
    (caaadr sci_caaadr)
    (caadar sci_caadar)
    (caaaar sci_caaaar)
    (cdddr sci_cdddr)
    (cdadr sci_cdadr)
    (cddar sci_cddar)
    (cdaar sci_cdaar)
    (caddr sci_caddr)
    (caadr sci_caadr)
    (cadar sci_cadar)
    (caaar sci_caaar)
    (cddr sci_cddr)
    (cadr sci_cadr)
    (cdar sci_cdar)
    (caar sci_caar)
    (set-cdr! sci_setCdr)
    (set-car! sci_setCar)
    (cdr sci_cdr)
    (car sci_car)
    (cons sci_cons)
    (pair? sci_isPair)
    (boolean? sci_isBoolean)
    (not sci_not)
    (inexact->exact sci_inexact2exact)
    (exact->inexact sci_exact2inexact)
    (expt sci_expt)
    (sqrt sci_sqrt)
    (atan sci_atan)
    (acos sci_acos)
    (asin sci_asin)
    (tan sci_tan)
    (cos sci_cos)
    (sin sci_sin)
    (log sci_log)
    (exp sci_exp)
    (rationalize sci_rationalize)
    (round sci_round)
    (truncate sci_truncate)
    (ceiling sci_ceiling)
    (floor sci_floor)
    (denominator sci_denominator)
    (numerator sci_numerator)
    (lcm sci_lcm)
    (gcd sci_gcd)
    (modulo sci_modulo)
    (remainder sci_remainder)
    (quotient sci_quotient)
    (/fx sci_quotient)
    (abs sci_abs)
    (/ sci_div)
    (/fl sci_div)
    (- sci_minus)
    (-fx sci_minus)
    (-fl sci_minus)
    (* sci_multi)
    (*fx sci_multi)
    (*fl sci_multi)
    (+ sci_plus)
    (+fx sci_plus)
    (+fl sci_plus)
    (min sci_min)
    (max sci_max)
    (even? sci_isEven)
    (odd? sci_isOdd)
    (negative? sci_isNegative)
    (positive? sci_isPositive)
    (zero? sci_isZero)
    (>= sci_greaterEqual)
    (>=fl sci_greaterEqual)
    (>=fx sci_greaterEqual)
    (<= sci_lessEqual)
    (<=fx sci_lessEqual)
    (<=fl sci_lessEqual)
    (> sci_greater)
    (>fx sci_greater)
    (>fl sci_greater)
    (< sci_less)
    (<fx sci_less)
    (<fl sci_less)
    (= sci_equal)
    (=fx sci_equal)
    (=fl sci_equal)
    (inexact? sci_isInexact)
    (exact? sci_isExact)
    (integer? sci_isInteger)
    (rational? sci_isRational)
    (real? sci_isReal)
    (complex? sci_isComplex)
    (number? sci_isNumber)
    (equal? sci_isEqual)
    (eq? sci_isEq)
    (eqv? sci_isEqv)
    (remprop! sci_remProp)
    (getprop sci_getProp)
    (putprop! sci_putProp)
    (typeof sci_typeof)
    (alert sci_alert)
    (with-hop sci_with_hop)
    (*js* sci_JS_GLOBALS)))

(define *mutable-runtime-var-mapping*
  (append
    '((print sci_print_mutable)
      (write-circle sci_writeCircle_mutable)
      (display sci_display_mutable)
      (write sci_write_mutable)
      (with-output-to-string
        sci_withOutputToString_mutable)
      (with-input-from-string
        sci_withInputFromString_mutable)
      (read sci_read_mutable)
      (string->keyword sci_string2keyword_mutable)
      (keyword->string sci_keyword2string_mutable)
      (string-fill! sci_stringFill_mutable)
      (string-copy sci_stringCopy_mutable)
      (list->string sci_list2string_mutable)
      (string->list sci_string2list_mutable)
      (string-append sci_stringAppend_mutable)
      (substring sci_substring_mutable)
      (string-ci>=? sci_isStringCIGreaterEqual_mutable)
      (string-ci<=? sci_isStringCILessEqual_mutable)
      (string-ci>? sci_isStringCIGreater_mutable)
      (string-ci<? sci_isStringCILess_mutable)
      (string-ci=? sci_isStringCIEqual_mutable)
      (string>=? sci_isStringGreaterEqual_mutable)
      (string<=? sci_isStringLessEqual_mutable)
      (string>? sci_isStringGreater_mutable)
      (string<? sci_isStringLess_mutable)
      (string=? sci_isStringEqual_mutable)
      (string-set! sci_stringSet_mutable)
      (string-ref sci_stringRef_mutable)
      (string-length sci_stringLength_mutable)
      (string sci_string_mutable)
      (make-string sci_makeString_mutable)
      (string? sci_isString_mutable)
      (char->symbol sci_char2symbol_mutable)
      (char->string sci_char2string_mutable)
      (symbol-append sci_symbolAppend_mutable)
      (string->symbol sci_string2symbol_mutable)
      (symbol->string sci_symbol2string_mutable)
      (symbol? sci_isSymbol_mutable)
      (string->number sci_string2number_mutable)
      (symbol->number sci_symbol2number_mutable)
      (number->string sci_number2string_mutable)
      (number->symbol sci_number2symbol_mutable)
      (gensym sci_gensym_mutable)
      (error sci_error_mutable))
    *shared-runtime-var-mapping*))

(define *immutable-runtime-var-mapping*
  (append
    '((print sci_print_immutable)
      (write-circle sci_writeCircle_immutable)
      (display sci_display_immutable)
      (write sci_write_immutable)
      (with-output-to-string
        sci_withOutputToString_immutable)
      (with-input-from-string
        sci_withInputFromString_immutable)
      (read sci_read_immutable)
      (string->keyword sci_string2keyword_immutable)
      (keyword->string sci_keyword2string_immutable)
      (string-copy sci_stringCopy_immutable)
      (list->string sci_list2string_immutable)
      (string->list sci_string2list_immutable)
      (string-append sci_stringAppend_immutable)
      (substring sci_substring_immutable)
      (string-ci>=?
        sci_isStringCIGreaterEqual_immutable)
      (string-ci<=? sci_isStringCILessEqual_immutable)
      (string-ci>? sci_isStringCIGreater_immutable)
      (string-ci<? sci_isStringCILess_immutable)
      (string-ci=? sci_isStringCIEqual_immutable)
      (string>=? sci_isStringGreaterEqual_immutable)
      (string<=? sci_isStringLessEqual_immutable)
      (string>? sci_isStringGreater_immutable)
      (string<? sci_isStringLess_immutable)
      (string=? sci_isStringEqual_immutable)
      (string-ref sci_stringRef_immutable)
      (string-length sci_stringLength_immutable)
      (string sci_string_immutable)
      (make-string sci_makeString_immutable)
      (string? sci_isString_immutable)
      (char->symbol sci_char2symbol_immutable)
      (char->string sci_char2string_immutable)
      (symbol-append sci_symbolAppend_immutable)
      (string->symbol sci_string2symbol_immutable)
      (symbol->string sci_symbol2string_immutable)
      (symbol? sci_isSymbol_immutable)
      (string->number sci_string2number_immutable)
      (symbol->number sci_symbol2number_immutable)
      (number->string sci_number2string_immutable)
      (number->symbol sci_number2symbol_immutable)
      (gensym sci_gensym_immutable)
      (error sci_error_immutable))
    *shared-runtime-var-mapping*))

