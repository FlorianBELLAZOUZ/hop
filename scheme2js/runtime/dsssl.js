// generated by ../bin/hopc -j --meta runtime/dsssl.scm -o runtime/dsssl.js
/* scheme2js generated file Fri Aug 23 07:32:02 2013 */
"use strict";

var adsssl = "keyword argument misses value";
var bdsssl = "dsssl-get-key-arg";
var cdsssl = "dsssl formal parsing";
var ddsssl = "Unexpected #!keys parameters";

/*** META ((export dsssl-check-key-args!)) */
function BGl_dssslzd2checkzd2keyzd2argsz12zc0zzdssslz00(a,b) {
  if ((((b) === null))) {
var e = 
function (b) {
  var f = b;
do {
if ((((f) === null))) {
return (a);
}
else {
var e = (!(((f) instanceof sc_Pair)));
if ((e !== false)) {
var c = e;
}
else {
var d = ((((((f).__hop_cdr))) === null));
if ((d !== false)) {
c = d;
}
else {
c = (!(sc_isKeyword((((f).__hop_car)))));
}
}
if ((c !== false)) {
return ((sc_error(cdsssl, ddsssl, f)));
}
else {
f = (((f).__hop_cdr.__hop_cdr));
}
}
} while (true);
 };
return ((e(a)));
}
else {
var d = null;
var c = 
function (c,d,e) {
  var j = c;
var k = d;
var l = e;
do {
if ((((j) === null))) {
return ((sc_reverseBang(l)));
}
else {
var i = (!(((j) instanceof sc_Pair)));
if ((i !== false)) {
var f = i;
}
else {
var h = ((((((j).__hop_cdr))) === null));
if ((h !== false)) {
f = h;
}
else {
var g = (!(sc_isKeyword((((j).__hop_car)))));
if ((g !== false)) {
f = g;
}
else {
f = (((sc_memq((((j).__hop_car)), b)) === false));
}
}
}
if ((f !== false)) {
if (((k === false))) {
j = (((j).__hop_cdr));
}
else {
k = false;
l = ((new sc_Pair((((j).__hop_car)), l)));
j = (((j).__hop_cdr));
}
}
else {
j = (((j).__hop_cdr.__hop_cdr));
k = true;
}
}
} while (true);
 };
return ((c(a, false, d)));
}
 };

/*** META ((export dsssl-get-key-arg)) */
function BGl_dssslzd2getzd2keyzd2argzd2zzdssslz00(c,d,e) {
  var f = 
function (c) {
  var f = c;
while ((!(((f) === null)))) {
if ((!(sc_isKeyword((((f).__hop_car)))))) {
f = (((f).__hop_cdr));
}
else {
if ((((((f).__hop_car))===d))) {
if ((!((((((f).__hop_cdr))) instanceof sc_Pair)))) {
return ((sc_error(bdsssl, adsssl, (((f).__hop_car)))));
}
else {
return ((((f).__hop_cdr.__hop_car)));
}
}
else {
if ((!((((((f).__hop_cdr))) instanceof sc_Pair)))) {
return ((sc_error(bdsssl, adsssl, (((f).__hop_car)))));
}
else {
f = (((f).__hop_cdr.__hop_cdr));
}
}
}
}
return (e);
 };
return ((f(c)));
 };

/*** META ((export dsssl-get-key-rest-arg)) */
function BGl_dssslzd2getzd2keyzd2restzd2argz00zzdssslz00(c,d) {
  var e = 
function (c) {
  var h = c;
do {
if ((((h) === null))) {
return (null);
}
else {
var g = (!(sc_isKeyword((((h).__hop_car)))));
if ((g !== false)) {
var e = g;
}
else {
var f = ((((((h).__hop_cdr))) === null));
if ((f !== false)) {
e = f;
}
else {
e = (((sc_memq((((h).__hop_car)), d)) === false));
}
}
if ((e !== false)) {
return (h);
}
else {
h = (((h).__hop_cdr.__hop_cdr));
}
}
} while (true);
 };
return ((e(c)));
 };
