(<HTML>
 (<HEAD>
  (<HOP-HEAD>
   :css "hop-paned.css" :css "hop-tree.css"
   :jscript "hop-paned.js" :jscript "hop-tree.js"))
 (<BODY>
  (<H3> "An example of paned")
  (<PANED>
   :fraction 30
   (<PAN>
    (letrec ((file->string (lambda (f)
			      (with-input-from-file f
				 (lambda ()
				    (read-string (current-input-port))))))
	     (d (dirname (dirname (dirname (the-loading-file)))))
	     (directory->tree
	      (lambda (dir shape)
		 (<TREE> (<TRHEAD> shape)
			 (<TRBODY>
			  (map (lambda (f)
				  (let ((qf (make-file-name dir f)))
				     (if (directory? qf)
					 (directory->tree qf (make-file-name shape f))
					 (<TRLEAF>
					  (<TT> f
						:style { cursor: pointer }
						:onclick {hop( $(service ()
								   (<PRE>
								    (file->string qf)))(),
								hop_replace_id( "file-content" ))})))))
			       (directory->list dir)))))))
       (directory->tree d (basename d))))
   (<PAN>
    (<PRE> :id "file-content" "")))))
     
   
	
