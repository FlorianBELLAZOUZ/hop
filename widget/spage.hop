;*=====================================================================*/
;*    serrano/prgm/project/hop/2.2.x/widget/spage.hop                  */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Fri Aug 14 08:24:36 2009                          */
;*    Last change :  Tue Dec 21 18:15:40 2010 (serrano)                */
;*    Copyright   :  2009-10 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    SlidePage server-side implementation                             */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module __hopwidget-spage

   (library hop)

   (static (class xml-sphead-element::xml-element)
	   (class xml-sptabhead-element::xml-element))

   (export (<SPAGE> . obj)
	   (<SPHEAD> . obj)
	   (<SPTAB> . obj)
	   (<SPTABHEAD> . obj)))

;*---------------------------------------------------------------------*/
;*    SPAGE ...                                                        */
;*---------------------------------------------------------------------*/
(define-xml-compound <SPAGE> ((id (xml-make-id 'SPAGE) string)
			      (onchange #f)
			      (class #f)
			      (attr)
			      body)
   (let ((head (filter xml-sphead-element? body))
	 (body (filter (lambda (x) (not (xml-sphead-element? x))) body)))
      (instantiate::xml-element
	 (tag 'div)
	 (id id)
	 (attributes `(:hssclass "hop-spage" :class ,class ,@attr))
	 (body (list (if (null? head)
			 (<SPHEAD> :style "display: none" "?")
			 (car head))
		     (<SPAN> :hssclass "hop-spstyle" " ")
		     (<DIV> :hssclass "hop-spviewport"
			(<DIV> :hssclass "hop-spbody"
			   :class class
			   body))
		     ~(add-event-listener! window "ready"
			 (lambda (e)
			    (spage-init $id
					$(when (xml-tilde? onchange)
					    (sexp->xml-tilde
					     `(lambda (event)
						 ,(xml-tilde->sexp onchange))))))))))))

;*---------------------------------------------------------------------*/
;*    SPHEAD ...                                                       */
;*---------------------------------------------------------------------*/
(define-xml-compound <SPHEAD> ((id (xml-make-id 'SPHEAD) string)
			       (attr)
			       body)
   (instantiate::xml-sphead-element
      (tag 'div)
      (attributes `(:hssclass "hop-sphead" ,@attr))
      (id id)
      (body (list (<DIV> body)
		  (<DIV> :hssclass "hop-sppopbutton"
		     :onclick ~(spage-pop-update this)
		     (<SPAN> ""))))))

;*---------------------------------------------------------------------*/
;*    SPTAB ...                                                        */
;*---------------------------------------------------------------------*/
(define-xml-compound <SPTAB> ((id (xml-make-id 'SPTAB) string)
			      (onselect #f)
			      (class #f)
			      (attr)
			      body)
   
   (define (init-sptab id onselect)
      (sexp->xml-tilde
       `(let loop ()
	   (let ((el (dom-get-element-by-id ,id)))
	      (if (not el)
		  (after 10 loop)
		  (begin
		     (set! el.hop_add_event_listener sptab-add-event-listener!)
		     ,(when (xml-tilde? onselect)
			 `(set! el.onselect
				(lambda (event)
				   ,(xml-tilde->sexp onselect))))
		     #unspecified))))))
   
   (let* ((head (filter xml-sphead-element? body))
	  (body (filter (lambda (x) (not (xml-sphead-element? x))) body)))
      (if (and (pair? body) (null? (cdr body)) (xml-delay? (car body)))
	  ;; a dynamic tab
	  (let ((svc (service ()
			(<DIV> :hssclass "hop-spbody"
			   :class class
			   attr
			   body))))
	     (<DIV> :hssclass "hop-sptab" :class class  :id id
		:onclick ~(spage-push-service this $svc)
		(if (null? head) "?" (car head))
		(init-sptab id onselect)))
	  ;; a static tab
	  (<DIV> :hssclass "hop-sptab-static"
	     (<DIV> :hssclass "hop-spbody":class class attr body)
	     (<DIV> :hssclass "hop-sptab" :class class :id id
		:onclick ~(spage-push-node this (dom-previous-sibling this))
		(if (null? head) "?" (car head))
		(init-sptab id onselect))))))

;*---------------------------------------------------------------------*/
;*    SPTABHEAD ...                                                    */
;*---------------------------------------------------------------------*/
(define-xml-compound <SPTABHEAD> ((id (xml-make-id 'SPTABHEAD) string)
				  (attr)
				  body)
   (instantiate::xml-sphead-element
      (tag 'div)
      (attributes `(:hssclass "hop-sptabhead" ,@attr))
      (id id)
      (body (list (<SPAN> body)
		  (<DIV> :hssclass "hop-sppushbutton" "")))))
