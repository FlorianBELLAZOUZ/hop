;*=====================================================================*/
;*    serrano/prgm/project/hop/2.0.x/etc/configure-noarch.sch.in       */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Tue May  5 09:54:10 2009                          */
;*    Last change :  Mon Sep  7 19:14:03 2009 (serrano)                */
;*    Copyright   :  2009 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    Common arch HOP configuration                                    */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    Install directories ...                                          */
;*---------------------------------------------------------------------*/
(define-inline (hop-etc-directory) "@ETCDIR@")
(define-inline (hop-bin-directory) "@BINDIR@")
(define-inline (hop-lib-directory) "@LIBDIR@")
(define-inline (hop-share-directory) "@SHAREDIR@")
(define-inline (hop-contribs-directory) "@CONTRIBSDIR@")
(define-inline (hop-weblets-directory) "@WEBLETSDIR@")

;*---------------------------------------------------------------------*/
;*    hop-library-path ...                                             */
;*---------------------------------------------------------------------*/
(define (hop-library-path)
   (cond-expand
      (bigloo-jvm
       (cons* "/resource/bigloo" "@LIBPATH@" (bigloo-library-path)))
      (else
       (cons "@LIBPATH@" (bigloo-library-path)))))

;*---------------------------------------------------------------------*/
;*    hop-configure-rc-directory ...                                   */
;*---------------------------------------------------------------------*/
(define (hop-configure-rc-directory)
   (let ((home (or (getenv "HOME") "/"))
	 (host (hostname))
	 (pref ".config/hop"))
      (let loop ((host (if (not (string? host)) (getenv "HOST") host)))
	 (if (string? host)
	     (let ((home/host (make-file-name home (string-append pref "." host))))
		(if (and (file-exists? home/host) (directory? home/host))
		    home/host
		    (if (string=? (suffix host) "")
			(let ((home/def (make-file-name home pref)))
			   (cond
			      ((and (file-exists? home/def)
				    (directory? home/def))
			       home/def)
			      (else
			       home)))
			(loop (prefix host)))))))))

;*---------------------------------------------------------------------*/
;*    hop-configure-var-directory ...                                  */
;*---------------------------------------------------------------------*/
(define (hop-configure-var-directory)
   #f)

;*---------------------------------------------------------------------*/
;*    hop-configure-cache-directory ...                                */
;*---------------------------------------------------------------------*/
(define (hop-configure-cache-directory)
   #f)

