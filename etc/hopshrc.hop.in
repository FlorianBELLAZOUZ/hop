;*=====================================================================*/
;*    serrano/prgm/project/hop/1.10.x/etc/hoprc.hop.in                 */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Mar 26 08:20:34 2006                          */
;*    Last change :  Wed Dec 31 07:44:54 2008 (serrano)                */
;*    Copyright   :  2006-08 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    HOPSH runtime command file.                                      */
;*    -------------------------------------------------------------    */
;*    When HOP starts, it first search the RC files in the following   */
;*    order:                                                           */
;*      $HOME/.config/hop.$HOSTNAME/hopsnrc.hop                        */
;*      $HOME/.config/hop/hopshrc.hop                                  */
;*      $ETC/hopshrc.hop                                               */
;*                                                                     */
;*    Hence, if users want to define their own RC file but still load  */
;*    the one from /etc, they have to add the following expression     */
;*    anywhere in their RC file:                                       */
;*                                                                     */
;*    (let ((path (make-file-name (hop-etc-directory) "hopshrc.hop"))) */
;*       (when (file-exists? path) (hop-load path)))                   */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    Authentication                                                   */
;*---------------------------------------------------------------------*/
;; See hoprc.hop for details
;; 
;; hopsh needs an anonymous user even with highly restricted authorizations
(add-user! "anonymous" 
           :services #f
	   :directories (hop-path)
           :preferences-filename #f)
