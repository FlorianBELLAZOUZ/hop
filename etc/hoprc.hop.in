;*=====================================================================*/
;*    serrano/prgm/project/hop/etc/hoprc.hop.in                        */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Mar 26 08:20:34 2006                          */
;*    Last change :  Sun Mar 26 08:50:53 2006 (serrano)                */
;*    Copyright   :  2006 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    HOP runtime command file.                                        */
;*    -------------------------------------------------------------    */
;*    When HOP starts, it first search the RC files in the following   */
;*    order:                                                           */
;*      $HOME/.config/hop.$HOSTNAME/hoprc.hop                          */
;*      $HOME/.config/hop/hoprc.hop                                    */
;*      $ETC/hoprc.hop                                                 */
;*                                                                     */
;*    Hence, if users want to define their own RC file but still load  */
;*    the one from /etc, they have to add the following expression     */
;*    anywhere in their RC file:                                       */
;*                                                                     */
;*    (let ((path (make-file-name (hop-etc-directory) "hoprc.hop")))   */
;*       (when (file-exists? path) (hop-load path)))                   */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    passwords                                                        */
;*    -------------------------------------------------------------    */
;*    When exists, load an HOP password file.                          */
;*                                                                     */
;*    A user is declared with the ADD-USER! function, whose syntax     */
;*    is:                                                              */
;*                                                                     */
;*    (add-user! "serrano"                                             */
;*    	   :groups <list-of-symbols>                                   */
;*    	   :password <PASSWORD>                                        */
;*    	   :directories <list-of-string> | '*                          */
;*    	   :services (list-of-symbols) | '*                            */
;*                                                                     */
;*    Examples:                                                        */
;*                                                                     */
;*    (add-user! "admin"                                               */
;*    	   :groups '(admin exec bbdb)                                  */
;*    	   :password "3a8456e439c48f324cef234a4b687cd2"                */
;*    	   :directories '*                                             */
;*    	   :services '*)                                               */
;*    (add-user! "guest"                                               */
;*    	   :groups '(guest)                                            */
;*    	   :password "384a653ec489344fe22c4f436a7bd82c"                */
;*    	   :directories (cons "/users/guest" (hop-path))               */
;*    	   :services '(hopcal))                                        */
;*---------------------------------------------------------------------*/
(when (file-exists? (make-file-name (hop-etc-directory) "passwd.hop"))
   (hop-load (make-file-name (hop-etc-directory) "passwd.hop")))

;*---------------------------------------------------------------------*/
;*    proxy authentication                                             */
;*    -------------------------------------------------------------    */
;*    Set to #t for enabling proxy authentication.                     */
;*                                                                     */
;*    Enabling proxy authentication enables HOP to trace and log       */
;*    all proxy requests.                                              */
;*---------------------------------------------------------------------*/
;; (hop-proxy-authentication-set! #f)

;*---------------------------------------------------------------------*/
;*    server aliases ...                                               */
;*---------------------------------------------------------------------*/
;; (hop-server-aliases-add! "<YOUR-ALIASES-HOSTNAME>")
