/*=====================================================================*/
/*    serrano/prgm/project/hop/etc/hop-autoconf.js.in                  */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Thu May 18 05:26:40 2006                          */
/*    Last change :  Thu Jul 26 09:10:30 2007 (serrano)                */
/*    Copyright   :  2006-07 Manuel Serrano                            */
/*    -------------------------------------------------------------    */
/*    All non portable components of the HOP runtime system. All other */
/*    HOP script libraries are supposed *not* to check features        */
/*    availabilities.                                                  */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    Hop server directories ...                                       */
/*---------------------------------------------------------------------*/
function hop_etc_directory() { 
    return  "@ETCDIR@";
}
function hop_bin_directory() {
    return "@BINDIR@";
 }
function hop_lib_directory() {
    return "@LIBDIR@";
}
function hop_share_directory() {
    return "@SHAREDIR@";
}
function hop_contribs_directory() {
    return "@CONTRIBSDIR@";
}
function hop_weblets_directory() {
    return "@WEBLETSDIR@";
}

/*---------------------------------------------------------------------*/
/*    Hop configuration                                                */
/*---------------------------------------------------------------------*/
var hop_enable_location_event = @LOCEVENT@;

/*---------------------------------------------------------------------*/
/*    DOMFormElement ...                                               */
/*---------------------------------------------------------------------*/
var undefined;

if( window.HTMLFormElement == undefined ) {
   window.HTMLFormElement = window.HTMLForm;
}

if( window.HTMLCollection == undefined ) {
   window.HTMLCollection = function() { return false; };
}

if( window.HTMLInputElement == undefined ) {
   window.HTMLInputElement = function() { return false; };
}

if( window.HTMLTextAreaElement == undefined ) {
   window.HTMLTextAreaElement = function() { return false; };
}

if( window.HTMLSelectElement == undefined ) {
   window.HTMLSelectElement = function() { return false; };
}

/*---------------------------------------------------------------------*/
/*    hop_properties_to_string ...                                     */
/*---------------------------------------------------------------------*/
function hop_properties_to_string( obj ) {
   var res = "";
   var i = 0;
   for( var p in obj ) {
      if( i == 10 ) {
	 res += p + "\n";
	 i = 0;
      } else {
	 i++;
	 res += p + " ";
      }
   }
   return res;
}

/*---------------------------------------------------------------------*/
/*    hop_is_html_element ...                                          */
/*---------------------------------------------------------------------*/
var hop_is_html_element;

if( window.HTMLElement == undefined ) {
   hop_is_html_element = function hop_is_html_element( obj ) {
      return (((obj instanceof Object) || (typeof obj == "object"))
	      && (typeof obj.innerHTML == "string"));
   } 
} else {
   var ifr = document.createElement( "iframe" );

   if( ifr instanceof HTMLElement ) {
      hop_is_html_element = function hop_is_html_element( obj ) {
	 return (obj instanceof HTMLElement);
      }
   } else {
      /* this is konqueror */
      var ifproto = ifr.__proto__;
      hop_is_html_element = function hop_is_html_element( obj ) {
	 return (obj instanceof HTMLElement) || (obj.__proto__ == ifproto);
      }
   }
}

/*---------------------------------------------------------------------*/
/*    hop_make_xml_http_request ...                                    */
/*---------------------------------------------------------------------*/
var hop_make_xml_http_request;

if( window.XMLHttpRequest != undefined ) {
   var req = new XMLHttpRequest();
   if( req.overrideMimeType != undefined ) {
      hop_make_xml_http_request = function hop_make_xml_http_request() {
	 var req = new XMLHttpRequest();
	 /* this is required by some versions of Mozilla */
/* 	 req.overrideMimeType( "text/xml" );                           */
	 return req;
      }
   } else {
      hop_make_xml_http_request = function hop_make_xml_http_request() {
	 return new XMLHttpRequest();
      }
   }
} else {
   if( window.ActiveXObject != undefined ) {
      hop_make_xml_http_request = function hop_make_xml_http_request() {
	 try {
	    return new ActiveXObject( "Msxml2.XMLHTTP" );
	 } catch( e ) {
	    return new ActiveXObject( "Microsoft.XMLHTTP" );
	 }
      }
   } else {
      if( XMLHttpRequest != undefined ) {
	 hop_make_xml_http_request = function hop_make_xml_http_request() {
	    return new XMLHttpRequest();
	 }
      } else {
	 hop_make_xml_http_request = function hop_make_xml_http_request() {
	    alert( "*** ERROR: Don't know how to create XMLHttpRequest" );
	 }
      }
   }
}

/*---------------------------------------------------------------------*/
/*    function                                                         */
/*    hop_is_http_json ...                                             */
/*---------------------------------------------------------------------*/
var hop_is_http_json;
var hop_is_http_json_autoconf = hop_make_xml_http_request();

if( (hop_is_http_json_autoconf.propertyIsEnumerable != undefined)
    && hop_is_http_json_autoconf.propertyIsEnumerable( "getResponseHeader" )
    && hop_is_http_json_autoconf.getResponseHeader != undefined ) {
   hop_is_http_json = function hop_is_http_json( http ) {
      return http.getResponseHeader( "hopjson" );
   }
} else {
   hop_is_http_json = function hop_is_http_json( http ) {
      return (http.getAllResponseHeaders().indexOf( "hopjson" ) >= 0);
   }
}

/*---------------------------------------------------------------------*/
/*    node_style_get ...                                               */
/*---------------------------------------------------------------------*/
function node_style_get( obj, prop ) {
   return obj.style[ prop ];
}

/*---------------------------------------------------------------------*/
/*    node_style_set ...                                               */
/*---------------------------------------------------------------------*/
var node_style_set = undefined;

function node_style_set_native( obj, prop, value ) {
   if( sc_isKeyword( prop ) )
      prop = sc_keyword2string_mutable( prop );
   if( !(value instanceof String) && (typeof value != "string") )
      value = value.toString();
   
   obj.style.setProperty( prop, value, "" );
}

function node_style_set_array( obj, prop, value ) {
   if( sc_isKeyword( prop ) )
      prop = sc_keyword2string_mutable( prop );
   if( !(value instanceof String) && (typeof value != "string") )
      value = value.toString();
   
   obj.style[ prop ] = value;
}

node_style_set = function( obj, property, value ) {
   if( obj.style.setProperty != undefined ) {
      node_style_set = node_style_set_native;
   } else {
      node_style_set = node_style_set_array;
   }

   return node_style_set( obj, property, value );
}

/*---------------------------------------------------------------------*/
/*    hop_active_location_timeout ...                                  */
/*    -------------------------------------------------------------    */
/*    The frequency, new locations are checked. On slow CPU (e.g.,     */
/*    ARM processors), use a reduced frequency.                        */
/*---------------------------------------------------------------------*/
var hop_active_location_timeout =
   (navigator.oscpu.indexOf( "armv6" ) >= 0 ) ? 250 : 100;

/*---------------------------------------------------------------------*/
/*    hop_add_active_location_listener ...                             */
/*---------------------------------------------------------------------*/
function hop_add_active_location_listener( obj, proc ) {
   obj.hop_active_location_proc = proc;
   var i = window.location.href.indexOf( "#" );
   if( i == -1 ) {
      obj.hop_active_location_href = window.location.href;
   } else {
      obj.hop_active_location_href = window.location.href.substring( 0, i-1 );
   }
   
   if( obj.hop_active_location_interval == undefined ) {
      var check = function() {
	 if( obj.hop_active_location_href !== window.location.href ) {
	    if( obj.hop_active_location_href != window.location.href ) {
	       obj.hop_active_location_href = window.location.href;
	       obj.hop_active_location_proc( window.location );
	    }
	 }
	 return true;
      }

      obj.hop_active_location_interval =
	 setInterval( check, hop_active_location_timeout );
   }
   return false;
}

/*---------------------------------------------------------------------*/
/*    function                                                         */
/*    hop_remove_active_location_listener ...                          */
/*---------------------------------------------------------------------*/
function
hop_remove_active_location_listener( obj, proc ) {
   if( obj.hop_active_location_interval != undefined ) {
      clearInterval( obj.hop_active_location_interval );
      obj.hop_active_location_interval = undefined;
   }
}

/*---------------------------------------------------------------------*/
/*    hop_active_location_set ...                                      */
/*---------------------------------------------------------------------*/
function hop_active_location_set( obj, href ) {
   window.location.href = href;
   obj.hop_active_location_href = window.location.href;
}

/*---------------------------------------------------------------------*/
/*    Event handlers                                                   */
/*---------------------------------------------------------------------*/
var hop_add_event_listener = undefined;
var hop_remove_event_listener = undefined;
var hop_stop_propagation = undefined;

if( document.implementation.hasFeature( "Events" , "2.0") ) {
   hop_add_event_listener = function( obj, event, proc, capture ) {
      if( event == "location" ) {
	 return hop_add_active_location_listener( obj, proc );
      } else {
	 return obj.addEventListener( event, proc, capture );
      }
   }
   hop_remove_event_listener = function( obj, event, proc, capture ) {
      if( event == "location" ) {
	 return hop_remove_active_location_listener( obj, proc );
      } else {
	 return obj.removeEventListener( event, proc, capture );
      }
   }
   hop_stop_propagation = function( event, def ) {
      if( !def ) event.preventDefault();
      event.stopPropagation();
   }
} else {
   hop_add_event_listener = function( obj, event, proc, capture ) {
      if( event == "location" ) {
	 return hop_add_active_location_listener( obj, proc );
      } else {
	 var p = function(_) { return proc( window.event ) };
	 var i = "on" + event + "hdl";

	 if( obj[ i ] == undefined ) obj[ i ] = [];
	 obj[ i ][ proc ] = p;

	 return obj.attachEvent( "on" + event, p );
      }
   }
   hop_remove_event_listener = function( obj, event, proc, capture ) {
      if( event == "location" ) {
	 return hop_remove_active_location_listener( obj, proc );
      } else {
	 var i = "on" + event + "hdl";
	 var p = obj[ i ][ proc ];

	 if( p != undefined ) {
	    obj[ i ][ p ] = undefined;
	    return obj.detachEvent( "on" + event, p );
	 }

	 return false;
      }
   }
   hop_stop_propagation = function( event, def ) {
      if( !def ) event.cancelBubble = true;
      event.returnValue = false;
   }
}


/*---------------------------------------------------------------------*/
/*    hop_mozillap ...                                                 */
/*---------------------------------------------------------------------*/
function hop_mozillap() {
   return navigator.userAgent.indexOf( "Mozilla" ) >= 0;
}

/*---------------------------------------------------------------------*/
/*    hop_msiep ...                                                    */
/*---------------------------------------------------------------------*/
function hop_msiep() {
   return navigator.userAgent.indexOf( "MSIE" ) >= 0;
}

/*---------------------------------------------------------------------*/
/*    hop_khtmlp ...                                                   */
/*---------------------------------------------------------------------*/
function hop_khtmlp() {
   return navigator.userAgent.indexOf( "KHTML" ) >= 0;
}

/*---------------------------------------------------------------------*/
/*    hop_safarip ...                                                  */
/*---------------------------------------------------------------------*/
function hop_safarip() {
   return navigator.userAgent.indexOf( "Safari" ) >= 0;
}

/*---------------------------------------------------------------------*/
/*    hop_operap ...                                                   */
/*---------------------------------------------------------------------*/
function hop_operap() {
   return navigator.userAgent.indexOf( "Opera" ) >= 0;
}

/*---------------------------------------------------------------------*/
/*    hop_deinline_image ...                                           */
/*    -------------------------------------------------------------    */
/*    This function is invoked on inline images. It gives the          */
/*    browser a chance to load the inlined image. This is particularly */
/*    important for browsers such as IE that cannot handle inline      */
/*    images.                                                          */
/*---------------------------------------------------------------------*/
function hop_deinline_image( el, src ) {
   el.src = src;
}

/*---------------------------------------------------------------------*/
/*    mouse coords ...                                                 */
/*---------------------------------------------------------------------*/
var hop_event_mouse_x = undefined;
var hop_event_mouse_y = undefined;
var hop_event_mouse_button = undefined;
var hop_event_key_code = undefined;

if( document.implementation.hasFeature( "Events" , "2.0" ) ) {
   hop_event_mouse_x = function hop_event_mouse_x( event ) {
      return event.pageX;
   }
   hop_event_mouse_y = function hop_event_mouse_y( event ) {
      return event.pageY;
   }
   hop_event_key_code = function hop_event_key_code( event ) {
      return event.which;
   }
} else {
   hop_event_mouse_x = function hop_event_mouse_x( event ) {
      if( (document.body != null) &&
	  (document.documentElement.scrollLeft != null) ) {
	 return event.clientX + document.documentElement.scrollLeft;
      } else {
	 return event.clientX + document.body.scrollLeft;
      }
   }
   hop_event_mouse_y = function hop_event_mouse_y( event ) {
      if( (document.body != null) &&
	  (document.documentElement.scrollTop != null) ) {
	 return event.clientY + document.documentElement.scrollTop;
      } else {
	 return event.clientY + document.body.scrollTop;
      }
   }
   hop_event_key_code = function hop_event_key_code( event ) {
      return event.keyCode;
   }
}

if( hop_msiep() || (hop_khtmlp() && !hop_safarip()) ) {
   hop_event_mouse_button = function hop_event_mouse_button( e ) {
      return e.button;
   }
} else {
   hop_event_mouse_button = function hop_event_mouse_button( e ) {
      return 1 + e.button;
   }
}

/*---------------------------------------------------------------------*/
/*    hop_element_x ...                                                */
/*---------------------------------------------------------------------*/
function hop_element_x( obj ) {
   var res = 0;

   while( obj != null ) {
      if( typeof obj.offsetLeft == "number" ) 
	 res += obj.offsetLeft;
      else {
	 break;
      }
      obj = obj.offsetParent;
   }

   return res;
}

/*---------------------------------------------------------------------*/
/*    hop_window_width/height ...                                      */
/*---------------------------------------------------------------------*/
var hop_window_width = undefined;
var hop_window_height = undefined;

if( isNaN( window.innerWidth ) ) {
   hop_window_width = function hop_window_width( win ) {
      return document.documentElement.clientWidth;
   }
   hop_window_height = function hop_window_height( win ) {
      return document.documentElement.clientHeight;
   }
} else {
   hop_window_width = function hop_window_width( win ) {
      return window.innerWidth;
   }
   hop_window_height = function hop_window_height( win ) {
      return window.innerHeight;
   }
}

/*---------------------------------------------------------------------*/
/*    hop_element_y ...                                                */
/*---------------------------------------------------------------------*/
function hop_element_y( obj ) {
   var res = 0;

   while( obj != null ) {
      if( typeof obj.offsetTop == "number" ) 
	 res += obj.offsetTop;
      else {
	 break;
      }
      obj = obj.offsetParent;
   }

   return res;
}

/*---------------------------------------------------------------------*/
/*    hop_iframe_scroll_height ...                                     */
/*---------------------------------------------------------------------*/
function hop_iframe_scroll_height( e ) {
   if( e.contentDocument != undefined ) {
      return e.contentDocument.body.scrollHeight;
   } else {
      if( e.document != undefined ) {
	 return e.document.body.scrollHeight;
      } else {
	 return iframe.height;
      }
   }
}

/*---------------------------------------------------------------------*/
/*    hop_iframe_scroll_width ...                                      */
/*---------------------------------------------------------------------*/
function hop_iframe_scroll_width( e ) {
   if( e.contentDocument != undefined ) {
      return e.contentDocument.body.scrollWidth;
   } else {
      if( e.document != undefined ) {
	 return e.document.body.scrollWidth;
      } else {
	 return iframe.width;
      }
   }
}

/*---------------------------------------------------------------------*/
/*    hop_get_selection                                                */
/*---------------------------------------------------------------------*/
var hop_get_selection;

if( window.getSelection ) {
   hop_get_selection = function hop_get_selection() {
      return window.getSelection().toString();
   }
} else {
   if( document.getSelection ) {
      hop_get_selection = function hop_get_selection() {
	 return document.getSelection().toString();
      }
   } else {
      hop_get_selection = function hop_get_selection() {
	 if( document.selection ) {
	    return document.selection.createRange().text;
	 } else {
	    return "";
	 }
      }
   }
}
