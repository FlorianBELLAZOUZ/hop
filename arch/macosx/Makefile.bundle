# Not tested (and most probably won't work) if placed inside a directory with spaces.
#
# Typical usage to create macosx/hop.dmg (the -j3 is not necessary)
#   make -f arch/macosx/Makefile.bundle -j3 all
# which is equivalent to
#   make -f arch/macosx/Makefile.bundle configure
#   make -f arch/macosx/Makefile.bundle -j3
#   make -f arch/macosx/Makefile.bundle bundle
#   make -f arch/macosx/Makefile.bundle app
#   make -f arch/macosx/Makefile.bundle dmg
# If you need a specific older version, set OSX. For example OSX=10.6

# To create a dmg without graphical user interface use
#   make -f arch/macosx/Makefile.bundle single

default: build

-include etc/Makefile.hopconfig

PWD := $(shell pwd)
BOOTDIR := $(PWD)
BIN_NAME := hop
PROJ_NAME := Hop
MACOSX_DIR := $(BOOTDIR)/arch/macosx
DMG_DIR := $(MACOSX_DIR)/dmg
APP_DIR := $(DMG_DIR)/$(PROJ_NAME).app
GUI_DIR := $(MACOSX_DIR)/gui
NOGUI_DIR := $(MACOSX_DIR)/nogui
COMMON_DIR := $(MACOSX_DIR)/common
PROJ_DIR := $(GUI_DIR)/$(PROJ_NAME)/$(PROJ_NAME).xcodeproj
BUILD_DIR := $(GUI_DIR)/$(PROJ_NAME)/build
CONTENTS_DIR := $(APP_DIR)/Contents
HOP_ICON := $(COMMON_DIR)/hop.icns

XCODEBUILD = xcodebuild

CONTRIBS_DIR := /Library/Hop/Weblets

HDIUTIL := hdiutil

DMG := $(MACOSX_DIR)/$(BIN_NAME)-$(HOPRELEASE).dmg
DMG_TMP := $(MACOSX_DIR)/$(BIN_NAME)-$(HOPRELEASE)-tmp.dmg

BIN_DIR := Resources

all: 
	$(MAKE) -f arch/macosx/Makefile.bundle configure && \
        $(MAKE) -f arch/macosx/Makefile.bundle && \
        $(MAKE) -f arch/macosx/Makefile.bundle bundle && \
	$(MAKE) -f arch/macosx/Makefile.bundle app && \
        $(MAKE) -f arch/macosx/Makefile.bundle dmg

single: 
	$(MAKE) -f arch/macosx/Makefile.bundle configure-single && \
	$(MAKE) -f arch/macosx/Makefile.bundle && \
        $(MAKE) -f arch/macosx/Makefile.bundle bundle && \
        $(MAKE) -f arch/macosx/Makefile.bundle dmg

build:
	$(MAKE) LDEXTRA="-framework CoreFoundation"

# note that we need declare webletsdir and libdir as relative paths.
# during 'install' we need to override these values...

# For getting a new icon of a file hopIcon
# DeRez -only icns hopIcon/$'Icon\r' > HopIcon.rsrc 

configure:
	./configure --macosx-bundle \
        --prefix=/ \
	--srfi=macosx \
	--bindir=$(BIN_DIR) --mandir=Resources/man \
	--contribsdir=$(CONTRIBS_DIR) \
	--webletsdir=Resources/Weblets \
	--etcdir=Resources/etc \
	--sharedir=Resources \
	--libdir=Frameworks

configure-single:
	./configure --macosx-bundle \
        --prefix=/ \
	--srfi=macosx \
	--bindir=MacOS --mandir=Resources/man \
	--contribsdir=$(CONTRIBS_DIR) \
	--webletsdir=Resources/Weblets \
	--etcdir=Resources/etc \
	--sharedir=Resources \
	--libdir=Frameworks

bundle:
	mkdir -p $(CONTENTS_DIR) && \
	$(MAKE) DESTDIR=$(CONTENTS_DIR)/ install && \
	BIGLOO_VERSION=`$(BIGLOO) -q -eval "(begin (print *bigloo-version*) (exit 0))"` && \
	mkdir -p $(CONTENTS_DIR)/Frameworks/bigloo/$$BIGLOO_VERSION && \
	cp -R $(BIGLOOLIBDIR)/*.dylib $(BIGLOOLIBDIR)/*.init $(BIGLOOLIBDIR)/*.heap $(CONTENTS_DIR)/Frameworks/bigloo/$$BIGLOO_VERSION/ && \
	cp $(HOP_ICON) $(CONTENTS_DIR)/Resources && \
	cp $(NOGUI_DIR)/Info.plist $(CONTENTS_DIR)/ 

app:
	$(XCODEBUILD) -project $(PROJ_DIR) -target Hop$(OSX) && \
	cp -r $(BUILD_DIR)/Release/$(PROJ_NAME).app/Contents/* $(CONTENTS_DIR)/ 

dmg: $(DMG)

$(DMG): 
	cp $(HOP_ICON) $(DMG_DIR)/.VolumeIcon.icns && \
	SetFile -c icnC $(DMG_DIR)/.VolumeIcon.icns && \
	$(HDIUTIL) create -srcfolder $(DMG_DIR) -volname $(BIN_NAME) -format UDRW -ov $(DMG_TMP) && \
	rm -rf $(DMG_DIR) && \
	mkdir -p $(DMG_DIR) && \
	$(HDIUTIL) attach $(DMG_TMP)  -mountpoint $(DMG_DIR) && \
	SetFile -a C $(DMG_DIR) && \
	$(HDIUTIL) detach $(DMG_DIR) && \
	$(HDIUTIL) convert $(DMG_TMP)  -format UDZO -o "$@" && \
	rm -f $(DMG_TMP) && \
	Rez -append $(COMMON_DIR)/HopIcon.rsrc -o "$@" && \
	SetFile -a C "$@"

clean:
	-rm -rf $(BUILD_DIR)
	-rm -f $(DMG)
	-rm -f $(DMG_TMP) 
	-rm -rf $(DMG_DIR)/*

.PHONY: configure configure-single single build bundle lib app dmg clean
