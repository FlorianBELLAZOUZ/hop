<doc> HZ packages

== Description ==

This tutorial shows how to **construct** and how to **release** HOP
weblets, that is HOP programs. HOP weblets can be managed
(installed, removed, executed, or configured) with the ,(<A> :href
"http://localhost:8080/hop/hz"
            (<SPAN> :style {font-variant: small-caps} "Hz")) weblet. The
weblet ,(<A> :href "http://localhost:8080/hop/weblets"
         	   (<SPAN> :style {font-variant: small-caps} "Weblets"))
is intended to help HOP users that wish to distribute their own weblets.


~~ A ,(<A> :href "http://localhost:8080/hop/hz"
      (<SPAN> :style {font-variant: small-caps} "Hz")) package, the
format used for bundling weblets, is actually a tarball file (a
[[http://www.gnu.org/software/gzip/gzip.html|gzipped]]
[[http://www.gnu.org/software/tar/|tar]] file) containing the source
code of the weblet plus some utility files and some contribution files
(e.g., the icons of the application).

~~ The documentation of the ++[[/hop/hz|hz]]++ weblet can be found 
,(<WEBLETREF> "here" (make-file-path (hop-weblets-directory) "hz/etc/hz.wiki")). The documentation of ++[[/hop/weblets|weblets]]++ 
,(<WEBLETREF> "here" (make-file-path (hop-weblets-directory) "hz/etc/weblets.wiki")).

~~ The weblet ++[[/hop/hzbuilder|hzbuilder]]++ creates the minimal file 
structure needed for a complete weblet. It operates automatically
the various steps presented in this tutorial.


== Requirements ==

In order to build and test HOP ++.hz++ file, you need:

  - an operational HOP.
  - the GNU [[http://www.gnu.org/software/tar/|tar]] utility.
  - if the application contains more than one source code, the
 ++bglafile++ tool (that comes with the installation of the
 [[http://www.inria.fr/indes/fp/Bigloo|Bigloo]] compiler).


A package ++MYWEBLET.hz++ must, at least, contain:

  - ++MYWEBLET.hop++: The source file that contains the definition of the 
 ,(<APIREF> "service" "service.wiki") ++MYWEBLET++. Note that the definition of
 the service  ++MYWEBLET++ __must__ be present in the file ++MYWEBLET.hop++.
  - optional additional sources (++.hop++ files), ++.hss++, and ++.css++ files.
  - ++.afile++: this file is needed if the weblet uses several source files.
  - ++etc/weblet.info++: this file contains the package meta information 
 (e.g., the revision number, the author, etc.).
  - ++etc/logo.png++: the logo (a 48x48 image) of the weblet.   

A package ++MYWEBLET.hz++ may contain:

  - ++etc/MYWEBLET.wiki++: the documentation of the weblet. Upon installation,
 this file is added to the various HOP documentations and it automatically
 becomes accessible through the ,(<A> :href "http://localhost:8080/hop/doc"
      (<SPAN> :style {font-variant: small-caps} "Doc")) weblet.

== The weblet ==

For the sake of the example, we are going to build a ++roman-0.0.1.hz++ package
for a weblet that converts roman number into their arabic representations.
For this we are assuming two source file: the file ++roman.hop++ that 
contains the definition of the weblet and ++config.hop++ the source code
that implements the actual conversion. The package will also use the
file ++config.hss++ for setting the graphical configuration.

~~ ,(<SPAN> :style { color: red; font-weight: bold }
            [In the rest of this text, we assume that
all the files are created in a directory named
,(<TT> :style {color: red} "\"roman\"").])

~~ The file ++roman.hop++ is implemented as:

<code>
  (module roman
     (import roman-convert))
  
  (define-service (roman num)
     (<HTML>
       (<HEAD> :base (service-base-url roman (current-request)) :css "roman.hss")
       (<BODY>
          (<TABLE> 
              (<TR> 
                 (<TD> :class "roman" (or num 10))
                 (<TD> :class "arabic" (roman->arabic (or num 10)))))
          (<FOOT>))))

  (define-service (roman/preferences)
     (if (not (authorized-service? (current-request) 'admin))
         (user-access-denied req)
         (<HTML>
            (<BODY>
              "No preference for this weblet"))))

  (define-service (roman/documentation)
     (<HTML>
        (<BODY>
           "This service compute roman -> arabic number representation.
            It accepts one roman number and it displays a table to
            two colums with the roman and the arabic representation.")))
</code>

~~ The use of the markup ++<FOOT>++ insert the HOP button at the end of the
page. Inserting the HOP button advertise that the Web page is actually served
by a HOP server. This promotes HOP and the more it gets promoted the better
its support will be.

~~ Each weblet **should** provide a ++MYWEBLET/preferences++ service. This is used
to configure the weblet. Even if not reflected by the current example which
supports no customization, in general, it is a good idea to automate the
generation of the preferences with parameters (see ++define-parameter++
and ++define-preferences++).

~~ Each weblet **should** provide a ++MYWEBLET/documentation++ service. 
This is used to give documentation for the weblet.

~~ The file ++convert.hop++ contains the definition of the actual conversion
(++roman->arabic++). It definition is:

<code>
  (module roman-convert 
     (export (roman->arabic r)))

  (define (digit-roman->arabic digit)
      (case digit
         ((#\m #\M) 1000)
         ((#\d #\D) 500)
         ((#\c #\C) 100)
         ((#\l #\L) 50)
         ((#\x #\X) 10)
         ((#\v #\V) 5)
         ((#\i #\I) 1)
         (else (error 'roman->arabic "Illegal char" digit))))

  (define (roman->arabic r)
     (let ((len (string-length r)))
        (let loop ((indice 0))
           (cond
              ((= indice len)
               0)
              ((= indice (- len 1))
               (digit-roman->arabic (string-ref r indice)))
              (else
               (let ((x (digit-roman->arabic (string-ref r indice)))
                     (y (digit-roman->arabic (string-ref r (+ 1 indice)))))
                  (if (< x y)
                      (+ (- x) (loop (+ 1 indice)))
                      (+ x (loop (+ 1 indice))))))))))
</code>

The package contains several source files, hence it has to be provided with
a ++.afile++. For this, we can execute the following command:

<code>
    bglafile -suffix hop roman.hop convert.hop > .afile
</code>

This produces a file such as:

<code>
  ;; automatically generated, don't edit
  ;; /users/serrano/prgm/project/hop/weblets/roman
  ;; Mon May 24 08:26:38 2006
  
  (
    (roman "./roman.hop")
    (roman-convert "./convert.hop")
  )
</code>

This tells HOP where to find the source file containing
the definition of the modules ++roman++ and ++roman-convert++.

~~ Then, a file ++etc/weblet.info++ is needed. It can be defined as:

<code>
  (
    (name "roman")
    (author "M. Serrano")
    (url "http://nowhere.org/roman-0.0.1.hz")
    (version "0.0.1")
    (category "game")
    (title "HOP weblet for translating roman to arabic numbers")
  )
</code>

~~ The last step is optional. It consists in providing a logo for the weblet.
Copy any 48x48 ++.png++ file into the file ++etc/logo.png++.

== Building the package ==

The whole package is now ready. We have to build the ++.hz++ file. For
that, we move up to the parent of the directory ++roman++ and we issue
the command:

<code>
    tar cvfz roman-0.0.1.hz roman
</code>

This builds the ++roman-0.0.1.hz++ file. You can test the file with:

<code>
    tar tvfz roman-0.0.1.hz
</code>

This should produce an output similar to:

<code>
  drwxr-x--- serrano/users     2006-05-24 08:45:39 roman/
  drwxr-x--- serrano/users     2006-05-24 08:45:33 roman/etc/
   rw-r----- serrano/users     2006-05-24 08:45:27 roman/etc/logo.png
   rw-r----- serrano/users     2006-05-24 08:45:33 roman/etc/weblet.info
   rw-r----- serrano/users     2006-05-24 08:45:34 roman/.afile
   rw-r----- serrano/users     2006-05-24 08:45:37 roman/roman.hop
   rw-r----- serrano/users     2006-05-24 08:45:39 roman/convert.hop
</code>

=== Package file name ===

The name of the files holding HZ package must **strictly** conform
rules enforced by the system. A badly formed HZ package file name cannot
be added into the HZ database. The language defining the HZ package file
named is defined by the following regular expression:

<code>
  (.*)-[0-9]+[.][0-9]+(?:[.][0-9]+)?(?:-(?:r|rc|pre)[0-9]+)?.hz
</code>

Here is a list of example of correct HZ file names:

<code>
  roman-0.0.1.hz
  hoptris-1.0.hz
  hop_tris-1.0.hz
  hopslide-1.4.0-rc2.hz
</code>


== The weblet.info file ==

The ++weblet.info++ file contains packages //meta data//. It is a list of
associations. Each association is a key and a value. The currently knows
keys are:

  * ++name++, the name of the weblet.
  * ++version++, the version of the weblet.
  * ++home++, a URL describing the weblet.
  * ++url++, a URL containing the weblet.
  * ++publisher++, the URL of the HZ sync-list publishing the weblet.
  * ++author++, the author of the weblet.
  * ++version++, the version of the weblet.
  * ++title++, a one-liner description.
  * ++comment++, a description of the weblet.
  * ++category++, the category the weblet belongs to. The category list is
 closed. A category must be one of:
    * ++hop++
    * ++devel++
    * ++games++
    * ++multimedia++
    * ++other++
    * ++system++
    * ++desktop++
    * ++education++
    * ++office++ 
    * ++scientific++
    * ++domotics++ 


 this list might be extended in the future versions of HOP.   
  * ++minhop++, the minimal HOP version able to run the weblet.
  * ++maxhop++, the maximal HOP version able to run the weblet.

== The ++/documentation++ service ==

The ++MYWEBLET/documentation++ service may be freely implemented. However, if one
wants to re-use the ,(<A> :href "http://localhost:8080/hop/doc"
      (<SPAN> :style {font-variant: small-caps} "Doc")) weblet, it has
to provide his package with a file ++etc/MYWEBLET.wiki++ and implement the
++/documentation++ service as:

<code>
   (define-service (MYWEBLET/documentation)
      (let* ((file (service-resource MYWEBLET/documentation "/etc/MYWEBLET.wiki"))
             (url (format "/hop/doc/weblet?weblet=~a" file)))
         (instantiate::http-response-string
            (start-line "HTTP/1.0 301 Moved Permanently")
            (header (list (cons 'location: url))))))
</code>

This service delegates the display of the documentation to the 
,(<A> :href "http://localhost:8080/hop/doc"
      (<SPAN> :style {font-variant: small-caps} "Doc")) weblet. The syntax
of the the ++MYWEBLET.wiki++ file has to conform the HOP
,(<SPAN> :class "href" "Wiki syntax" 
     :onclick ~(notepad-select "doc-notepad" "doc-wiki")).


== Releasing the package ==

The last step consists in releasing the package. For this, go to the HOP
[[http://hop.inria.fr|home page]], select the ++weblets++ tab and upload
the ++roman-0.0.1.hz++ file.

=== Releasing individual weblet ===

~~ Alternatively you can choose not to be registered on the global HOP
weblet database. That is, you can distribute your package on your
own servers. You can use the service ++hz/install++ to
automate the installation of your ++.hz++ file. If the Web page Web
referring to the weblet is implemented in HOP, it should contain the
following:

<code>
  (<HTML>
     (<HEAD> 
        ... 
        :jscript (string-append (hop-weblets-directory) "/hz/hz-install.js")
        ...)
     (<BODY> 
        ...
        ~(hop_install_weblet 
             "http://mhost.mydomain.org/roman-0.0.1.hz"
             $(string-append (hop-weblets-directory) "/hz/etc/hz-install.png"))
        ...))
</code>


If the page is implemented in HTML, it should contain:

<code>
   <html>
     <head>
       ...
       <script src='/usr/local/share/hop/weblets/hz/hz-install.js'>
       ...
     </head>
     <body>
       ...
       <script>hop_install_weblet( "http://mhost.mydomain.org/roman-0.0.1.hz" )</script>
       ...
     </body>
   </body>
</code>

In that case, don't forget to copy the image ++hz-install.png++ in the
same directory as the directory containing the web page. This image is
contained in the HOP distribution, in the directory

<code>
  HOPSHAREROOT/weblets/hz/etc/hz-install.png
</code>

The function ++hop_install_weblet++ creates a HTML link that when
clicked fetches and installs the ++roman-0.0.1.hz++ file on the HOP
broker whose host and port number can be changed using the Web page.

This technique requires two additional fields in the ++weblet.info++
file.

  - The ++category++ of the weblet. It can be any string of characters. 
  - The ++url++ where to download the ++roman-0.0.1.hz++ file.

=== Implementing a HZ server of weblets ===

In the previous section, we have shown how to provide weblets for download
in regular Web pages. In this section, we will show how to implement a
server of weblets that is compatible with ++[[hz]]++. This has the
advantage of allowing automatic updates of installed weblets.

~~ The easiest way for implementing a weblet servers compatible with ++[[hz]]++
is to use the ++[weblets]]++ weblet. Its 
,(<WEBLETREF> "documentation" 
(make-file-path (hop-weblets-directory) "hz/etc/hz.wiki"))
shows how it must be configured. Basically, it is only required to specify
the path of the server disk where the weblets (++.hz++ packages) are stored,
and ++weblets++ manages the whole site by itself.

~~ If you want to provide your own server, in addition to releasing the
++.hz++ packages, your server must provide a URL that produces 
the //list of available weblets//.
This list is made out of the concatenation of all the ++.info++ files of
your weblets. 

~~ Here is an example of sync list:

<code>
  (
   ((name "roman")
    (author "M. Serrano")
    (url "http://nowhere.org/roman-0.0.1.hz")
    (version "0.0.1")
    (category "game")
    (title "HOP weblet for translating roman to arabic numbers"))
   ((name "myweblet")
    (author "M. Serrano")
    (url "http://nowhere.org/myweblet-0.0.1.hz")
    (version "0.0.1")
    (category "devel")
    (title "A tool"))
  )
</code>


The ,(<WEBLETREF> (<TT> "weblets/synclist") 
(make-file-path (hop-weblets-directory) "weblets/etc/hz.wiki")) service
can be used to automatically generate this list. For instance, the following
command:

<code>
  hopsh -c "weblets/synclist -url /tmp/repository"
</code>

generates a sync list out of the weblets found in the directory 
++/tmp/repository++ located in the server.

=== Creating a web page for the weblet ===

The [[/hop/weblets|WEBLETS]] weblet can be used to generated **automatically**
a Web page for a weblet. This support two modes:

  * a fully automatic mode where the Web page is generated out of the
 information found in the ++etc/weblet.info++ file.
  * a semi-automatic mode where the Web page is generated out of the optional
 wiki files found in the directory ++etc/homepage++.


These two techniques are presented in the [[/hop/weblets|WEBLETS]]
,(<WEBLETREF> "documentation" 
(make-file-path (hop-weblets-directory) "weblets/etc/weblets.wiki")).


</doc>
