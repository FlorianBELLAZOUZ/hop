;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/doc/weblets.hop                 */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Mon May  8 06:21:47 2006                          */
;*    Last change :  Wed Sep 20 15:12:19 2006 (serrano)                */
;*    Copyright   :  2006 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    The HOP weblets doc.                                             */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hopdoc_weblets

   (import hopdoc_config
	   hopdoc_wiki
	   hopdoc_api
	   hopdoc_widgets
	   hopdoc_search)
   
   (export (<WEBLETS>)
	   (select-weblet-pad-on-load weblet)
	   (<WEBLETREF> key weblet)))

;*---------------------------------------------------------------------*/
;*    <WEBLETS> ...                                                    */
;*---------------------------------------------------------------------*/
(define (<WEBLETS> req)
   (let ((d (<DIV> :id "pad-weblet" (<WEBLETS-TOC>))))
      (<DIV>
	 :class "weblets"
	 (<DIV>
	    :class "weblets-title"
	    (<SPAN> :onclick ~(with-hop ($(service () (<WEBLETS-TOC>)))
				 (lambda (h) (set! $d.innerHTML h)))
	       "Weblets" ))
	 d)))

;*---------------------------------------------------------------------*/
;*    <WEBLETS-TOC> ...                                                */
;*---------------------------------------------------------------------*/
(define (<WEBLETS-TOC>)
   (let ((l (search-weblets)))
      (cond
	 ((null? l)
	  "No Weblets documentation installed")
	 ((null? (cdr l))
	  (<TABLE>
		:class "api-index"
		(<COLGROUP> :span 2 :width "50%")
		(<TR> (<TD> (car l)))))
	 (else
	  (let ((l2 (list-split! l
				 (inexact->exact (ceiling (/ (length l) 2)))
				 "&nbsp;")))
	     (<TABLE>
		:class "api-index"
		(<COLGROUP> :span 2 :width "50%")
		(map (lambda (a b) (<TR> (<TD> a) (<TD> b)))
		     (car l2) (cadr l2))))))))

;*---------------------------------------------------------------------*/
;*    select-weblet-pad-on-load ...                                    */
;*---------------------------------------------------------------------*/
(define (select-weblet-pad-on-load weblet)
   ~(window.addEventListener
     "load"
     (lambda (e)
	(with-hop ($doc/api $weblet)
	   (lambda (r)
	      (notepad-select "doc-notepad" "doc-weblets")
	      (let ((el (document.getElementById
			 "pad-weblet")))
		 (set! el.innerHTML r))))
	#f)
     #f))

;*---------------------------------------------------------------------*/
;*    select-weblet-pad ...                                            */
;*---------------------------------------------------------------------*/
(define (select-weblet-pad weblet)
   ~(with-hop ($doc/api $weblet)
       (lambda (r)
	  (notepad-select "doc-notepad" "doc-weblets")
	  (let ((el (document.getElementById "pad-weblet")))
	     (set! el.innerHTML r)))))

;*---------------------------------------------------------------------*/
;*    <WEBLETREF> ...                                                  */
;*---------------------------------------------------------------------*/
(define (<WEBLETREF> key weblet)
   (<SPAN> 
      :class "href" 
      :onclick (select-weblet-pad weblet)
      key))
