;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/doc/services.hop                */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Tue Apr 11 09:52:24 2006                          */
;*    Last change :  Tue Oct 30 18:35:53 2007 (serrano)                */
;*    Copyright   :  2006-07 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    HOP doc services                                                 */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hopdoc_services

   (import  hopdoc_wiki
	    hopdoc_widgets
	    hopdoc_config)
   
   (export  doc/edit
	    doc/example
	    doc/example-file))

;*---------------------------------------------------------------------*/
;*    doc/edit ...                                                     */
;*---------------------------------------------------------------------*/
(define-service (doc/edit file)
   (let ((editor (<TEXTAREA>
		    :class "editor"
		    :rows 70 :cols 80
		    (with-input-from-file file read-string)))
	 (base (service-base-url doc/edit (current-request))))
      (<DOC>
	 (<BUTTON>
	    :onclick ~(if (confirm "Save the document?")
			  (with-hop ($(service (body)
					 (with-output-to-file file
					    (lambda ()
					       (display body))))
				      $editor.value)))
	    "Save")
	 (<DIV>
	    :align "center"
	    editor))))
   
;*---------------------------------------------------------------------*/
;*    doc/example ...                                                  */
;*---------------------------------------------------------------------*/
(define-service (doc/example expr)
   (eval '(module doc/example (import hopdoc_config)))
   (if (authorized-service? (current-request) 'doc/example)
       (with-handler
	  (lambda (e)
	     (http-internal-error e "Error in source code"))
	  (instantiate::http-response-hop
	     (request (current-request))
	     (content-type "text/html")
	     (bodyp #t)
	     (xml (with-input-from-string expr
		     (lambda ()
			(let loop ((v #f))
			   (let ((e (hop-read)))
			      (if (eof-object? e)
				  v
				  (loop (eval e))))))))))
       (user-access-denied
	(current-request)
	"Executing user code source is prohibited on this server")))
   
;*---------------------------------------------------------------------*/
;*    doc/example-file ...                                             */
;*---------------------------------------------------------------------*/
(define-service (doc/example-file file)
   (eval '(module doc/example (import hopdoc_config)))
   (if (authorized-service? (current-request) 'doc/example)
       (with-handler
	  (lambda (e)
	     (http-internal-error e "Error in source code"))
	  (instantiate::http-response-hop
	     (request (current-request))
	     (content-type "text/html")
	     (bodyp #t)
	     (xml (with-input-from-file (make-file-path (doc-dir) "examples" file)
		     (lambda ()
			(let loop ((v #f))
			   (let ((e (hop-read)))
			      (if (eof-object? e)
				  v
				  (loop (eval e))))))))))
       (user-access-denied
	(current-request)
	"Executing user code source is prohibited on this server")))
   
