<doc> Outer Windows

== Description ==

HOP windows are window managed either by the client window manager (//native//
windows) or  by the client web Browser (//inner// windows). Native windows
can only be used to display complete documents. Inner windows can be used
to display partial documents.

== Synopsis ==

=== Client ===

  (window-open arg ...)
  (window-close win)
  (window-raise win)
  (window-resize win width height)
  (window-iconify win)
  (window-maximize win)

=== Requirements ===

Documents using //windows// need to load the script
++hop-window.js++.  They also might want to load the
++hop-window.hss++ style sheet. Hence, documents using //windows//
must include in their header, the following statement:


  (<HEAD> :include "hop-window")


== Examples ==

<example>window</example>

== Client Definitions ==
<client>

=== ++(window-open :id :src :parent :title :class ...)++ ===
<procedure> window-open

<arguments>
^  arguments  ^   type    ^   description                                   ^
| :src        |   obj     | the content material.                           |
| :id         |  string   | an optional identifier.                         |
| :title      |  string   | a title.                                        |
| :parent     |  false or obj  | an optional parent for the new window.     |
| :class      |  string   | the CSS class.                                  |
| :width      |  integer  | the optional width.                             |
| :height     |  integer  | the optional height.                            |
| :left       |  integer  | the optional X coordinate.                      |
| :top        |  integer  | the optional Y coordinate.                      |
| :background  |  color    | an optional background color.                   |
| :toolbar    |  bool     | shows a toolbar.                                |
| :scrollbars  |  bool     | shows scrollbars.                              |
| :status     |  bool     | shows a status bar.                             |
| :menubar    |  bool     | shows a menu bar.                               |
| :resizable  |  bool     | enables resize.                                 |
| :titlebar   |  bool     | shows a title bar.                              |
| :location   |  bool     | shows location information.                     |
| :prop       |  string   | a window property.                              |
</arguments>

If the optional argument ++:parent++ is present then an //inner// window
is created. Otherwise a //native// window is opened.

==== Inner Windows ====
Inner windows cannot be detached from the main browser window. The content
of the window, given by the ++:src++ argument, can either be a 
,(<APIREF> "service" "service.wiki"), a URL or any HTML tree. The optional
argument ++:background++ (also aliases ++:bg++) is effective. The arguments 
++:toolbar++, ++:status++, ++:menubar++, ++:titlebar++, 
and ++:location++ are ignored.

~~ Each time a window title is clicked, its raised to the front of all
windows. For that, they use CSS ++z-index++ that varies from 0 to 999.
Applications that have to display elements in the top of Iwindows must
specify a ++z-index++ greater than 1000.

~~ Inner windows are provided with attributes that control their dynamic
behaviors:

  * ++onclose++: a procedure of zero argument that is invoked after the window
 is closed.
  * ++onresize++: a procedure of zero argument that is invoked after the
 window is resized.
  * ++resizable++: a boolean that controls whether a window can be resized
 using GUI events.


==== Native Windows ====

Native windows are independent from the main browser window. The content of
the window, given by the ++:src++ argument, can either be a
 ,(<APIREF> "service" "service.wiki") or a URL. The optional argument
++:background++ is ineffective. The arguments ++:toolbar++, ++:status++,
++:menubar++, ++:resizable++, ++:titlebar++, and ++:location++ are effective.
In addition the ++:prop++ arguments is used to specified verbatim properties,
that is the string value argument following the ++:prop++ keyword is append,
//as is//, to the property string of the built window.

</procedure>

=== ++(window-close obj)++ ===
<procedure> window-close

<arguments>
^  arguments  ^   type    ^   description                                   ^
| obj         |   obj     | A window identifier or a window.                |
</arguments>

~~
This client-side procedure closes a //window//.

</procedure>
<client>

=== ++(window-raise obj)++ ===
<procedure> window-raise

<arguments>
^  arguments  ^   type    ^   description                                   ^
| obj         |   obj     | A window identifier or a window.                |
</arguments>

~~
This client-side procedure raises a //window//.

</procedure>
<client>

=== ++(window-iconify obj)++ ===
<procedure> window-iconify

<arguments>
^  arguments  ^   type    ^   description                                   ^
| obj         |   obj     | A window identifier or a window.                |
</arguments>

~~
This client-side procedure iconifies a //window//.

</procedure>
<client>

=== ++(window-resize obj width height)++ ===
<procedure> window-resize

<arguments>
^  arguments  ^   type      ^   description                              ^
| obj         |   obj       | A window identifier or a window.           |
| width       |  dimension  | new window width.                          |
| height      |  dimension  | new window height.                         |
</arguments>

~~
This client-side procedure resizes a //window//.

</procedure>
<client>

=== ++(window-maximize obj)++ ===
<procedure> window-maximize

<arguments>
^  arguments  ^   type    ^   description                                   ^
| obj         |   obj     | A window identifier or a window.                |
</arguments>

~~
This client-side procedure maximizes a //window//.

</procedure>
<client>

== Style ==
<style>

=== ++.window++ ===
<css> .window

The visual configuration of the body of the window.

</css>

=== ++hop-window.hss++ ===

The file ++hop-window.hss++ contains the default graphical configuration.
It is defined as:

~~
<share>hop-window.hss</share>
</style>

== See also ==
<see-also>TOOLTIP, window</see-also>

</doc>
