<doc> HEAD and FOOT markups

== Description ==

The ++<HEAD>++ markup defines the //head// of a document. The HOP
version of ++<HEAD>++ differs from the original HTML definition of
++HEAD++ markup. In particular the HOP version relies on a highly
non-standard way of evaluating its attributes which can occur several
times in an invocation. A typical ++<HEAD>++ looks like:

  (<HEAD>
     :dir <a-path>
     :jscript <foo1.js> :css <foo1.css>
     ...
     :jscript <fooN.js> :css <fooN.css>
     ...
     (<META> ...)
     ...
     (<SCRIPT> :type "text/javascript" ~(a piece of code))
     ...
     (<STYLE> :type "text/css" {cascading style sheet elements})
     ...)


== Synopsis ==

=== server ===

  (<HEAD> ...)
  (<FOOT> ...)
  (<FOOT-BUTTON> ...)

== Examples ==

<example><HEAD>, <FOOT>, <FOOT-BUTTON></example>

== Server Definitions ==
<server>

=== <HEAD> ===
<markup> <HEAD>

<arguments>
^  arguments   ^   type     ^   default    ^  short description                    ^
| :dir         |  string    |     _        | a directory name added to the path.   |
| :css         |  string    |     _        | a CSS/HSS file name.                  |
| :jscript     |  string    |     _        | a script file name.                   |
| :favicon     |  string    |     _        | a favicon file name.                  |
| :rts         |  bool      |     #t       | adds/removes the Hop runtime system.  |
| objs         |  element   |  empty       | the content of the head.              |
</arguments>

The ++<HEAD>++ markup uses special evaluation rules for its
attributes.  Attributes are evaluated from left to right. In
particular, contrary to all other markups, attributes may appear more
than once in the arguments list. In such a case the values are
accumulated (while with other markups, the last provided value
overrides the previous ones).

  * The attribute :dir is a //meta-attribute//. It add a new directory to
 the //search path//. This path is used to find ++css++, ++jscript++, and 
 ++favicon++ files. By default the search path is initialized with a list 
 containing the following elements:
     * the value of the ++hop-share-directory++ parameter.
     * the directory component of the URL of the current request.
 Each occurrence of a :dir attribute adds a new directory in the path.
  * The attribute :css adds a new element to the list of CSS/HSS used in the 
 document. This list is initially empty. Files using relative names are searched
 in the //search path// as described above.
  * The attribute :jscript adds a new element to the list of CSS/HSS used in the 
 document. This list is initially empty. Files using relative names are searched
 in the //search path// as described above.
  * The attribute :favicon specifies an small image to be used in the URL
 area of the web browser. Image files using relative names are searched
 in the //search path// as specified with the :dir attribute.
</markup>

=== <FOOT> ===
<markup> <FOOT>
<arguments>
| :id          |  string   |  //random//  | element identifier.         |
| :class       |  string   |  ++foot+     | element class.              |
| body         |  element  |  empty       | the body.                   |
</arguments>

This introduces a standard HOP foot in the produced HTML page. This contains
at least the HOP button. The ++body++ may contain elements build with
++<FOOT-BUTTON>++.

</markup>

=== <FOOT-BUTTON> ===
<markup> <FOOT-BUTTON>
<arguments>
| :id          |  string   |  //random//  | element identifier.         |
| :class       |  string   |  ++foot+     | element class.              |
| href         |  string   |              | a URL to go when clicked.   |
| title        |  string   |              | the button title.           |
| path         |  string   |              | the image absolute path.    |
| src          |  string   |              | the image relative path.    |
</arguments>

This markup introduce a small button. It should use alternatively an
absolute ++path++ or a //relative// ++src++ path. The absolute path
must refer to a user image. The relative path must refer to an image
name as provided by the standard HOP distribution (in the
,(make-file-name (hop-share-directory) "buttons") directory).
</markup>
</server>

== Style ==
<style>
This section describes the CSS elements used to configure
//foot// and //foot-button//.

=== ++div.foot++ ===
<css> div.foot

The ++<DIV>++ element holding the foot buttons.
</css>

=== ++div.foot a.foot-button++ ===
<css> div.foot a.foot-button

The ++<A>++ element of the foot button.
</css>

=== ++div.foot a.foot-button img++ ===
<css> div.foot a.foot-button img

The ++<IMG>++ element of the foot button.
</css>


== See also ==
<see-also><HEAD>, <FOOT>, <FOOT-BUTTON></see-also>

</doc>
