;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/hz/authenticate.hop             */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Tue Nov 20 15:35:43 2007                          */
;*    Last change :  Tue Nov 20 16:16:55 2007 (serrano)                */
;*    Copyright   :  2007 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    HZ authentication.                                               */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hz_authenticate

   (import hz_config
	   hz_sync)
   
   (export (<HZ:AUTHENTICATE>)))

;*---------------------------------------------------------------------*/
;*    <HZ:AUTHENTICATE> ...                                            */
;*---------------------------------------------------------------------*/
(define (<HZ:AUTHENTICATE>)
   (let ((user (<INPUT>
		  :type 'text :id "user-name"
		  :name "name" :size 50))
	 (pass (<INPUT>
		  :type 'password :id "password"
		  :name "password" :size 50)))
      (<DIV> :class "login" :id "login"
	 ~(define (login-prompt url)
	     (let ((o (dom-get-element-by-id "login"))
		   (o2 (dom-get-element-by-id "login-url")))
		(innerHTML-set! o2 url)
		(node-style-set! o :display "block")))
	 ~(define (login user password)
	     (let* ((o (dom-get-element-by-id document "login"))
		    (o2 (dom-get-element-by-id "login-url")))
		(with-hop ($(service (url user passwd)
			       (hz-sync-authenticate! url user passwd))
			    o2.innerHTML user.value password.value)
		   (lambda (val)
		      (node-style-set! o "display" "none")))))
	 (<DIV> :class "login-background" "")
	 (<DIV> :class "main" :align 'center
	    (<TABLE> :class "login"
	       (<TR>
		  (<TD> :colspan 3 :id "login-title"
		     "Authentication required for URL:"))
	       (<TR>
		  (<TD> :colspan 3 :id "login-url"
		     ""))
	       (<TR>
		  (<TH> "Login name: ")
		  (<TD> :colspan 2 user))
	       (<TR>
		  (<TH> "Password: ")
		  (<TD> :colspan 2 pass))
	       (<TR>
		  (<TD> :colspan 2 "&#160;"))
	       (<TR>
		  (<TD> :colspan 3
		     (<TABLE> :width "100%" :class "login-button"
			(<COLGROUP> (<COL> :span 2 :width "50%"))
			(<TR>
			   (<TD> 
			      (<BUTTON> :onclick
				 ~(login $user $pass)
				 "Login"))
			   (<TD> 
			      (<BUTTON> :onclick
				 ~(let ((o (dom-get-element-by-id "login")))
				     (node-style-set! o "display" "none"))
				 "Cancel")))))))))))

   
   
