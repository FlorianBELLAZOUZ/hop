;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/hz/install.hop                  */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Fri Mar 24 09:21:45 2006                          */
;*    Last change :  Thu Nov 22 15:33:58 2007 (serrano)                */
;*    Copyright   :  2006-07 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    Actual installation/uninstallation.                              */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hz_install
   
   (import hz_config
	   hz_package
	   hz_weblet
	   hz_db)
   
   (export (hz-install ::bstring)
	   (hz-load ::bstring)
	   (hz-uninstall ::weblet)))

;*---------------------------------------------------------------------*/
;*    hz-install ...                                                   */
;*---------------------------------------------------------------------*/
(define (hz-install url)
   (hz-db-init!)
   (multiple-value-bind (name version)
      (package-url-parse url)
      (let* ((hzfile (format "~a-~a.hz" name version))
	     (hzpath (make-file-name (hz-download-directory) hzfile)))
	 (unless (file-exists? hzpath)
	    (with-url url
	       (lambda (str)
		  (with-output-to-file hzpath
		     (lambda ()
			(display str))))
	       :timeout (hz-connection-timeout)))
	 (hz-install-from-file hzpath name version url)
	 (reset-autoload!)))
   '())

;*---------------------------------------------------------------------*/
;*    hz-install-from-file ...                                         */
;*---------------------------------------------------------------------*/
(define (hz-install-from-file path name version url)
   ;; untar the .hz into the weblets directory
   (let* ((p (open-input-gzip-file path)))
      (unwind-protect
	 (untar p :directory (hz-weblets-directory))
	 (close-input-port p)))
   ;; add the weblet to the database
   (let* ((p (make-file-path (hz-weblets-directory) name "etc" "weblet.info"))
	  (i (if (file-exists? p)
		 (with-input-from-file p read)
		 `((name ,name) (version ,version))))
	  (e (info->weblet i :name name :version version :url url)))
      ;; add the publisher for other possible weblets
      (unless (string=? (weblet-publisher e) "")
	 (hz-publisher-add! (weblet-publisher e)))
      ;; update the database
      (weblet-installstamp-set! e (hz-db-sync-stamp))
      (weblet-install-set! e (weblet-version e))
      (hz-db-add-or-update! e)))

;*---------------------------------------------------------------------*/
;*    hz-load ...                                                      */
;*---------------------------------------------------------------------*/
(define (hz-load path)
   (let ((p (open-input-gzip-file path)))
      (if (input-port? p)
	  (unwind-protect
	     (let* ((tmp (make-file-name (os-tmp) "hop"))
		    (files (untar p :directory tmp)))
		(if (pair? files)
		    (let ((file (car files))
			  (base (substring file
					   (+fx (string-length tmp) 1)
					   (string-length file)))
			  (dir (dirname base))
			  (name (if (string=? dir ".") base dir))
			  (src (make-file-path
				tmp name (string-append name ".hop"))))
		       (if (file-exists? src)
			   (hop-load src)
			   (error 'hz-load "Cannot find HOP source" path)))
		    (error 'hz-load "Cannot find HOP source" path)))
	     (close-input-port p))
	  (raise (instantiate::&io-port-error
		    (proc 'hz-load)
		    (msg "Cannot open HZ file")
		    (obj path))))))

;*---------------------------------------------------------------------*/
;*    hz-uninstall ...                                                 */
;*---------------------------------------------------------------------*/
(define (hz-uninstall w)
   (hz-db-init!)
   (with-access::weblet w (name installstamp install)
      (when (delete-path (make-file-path (hz-weblets-directory) name))
	 (set! installstamp -1)
	 (set! install "")
	 (hz-db-add-or-update! w))))
