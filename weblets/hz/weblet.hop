;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/hz/weblet.hop                   */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Mon Nov 19 05:30:17 2007                          */
;*    Last change :  Wed Nov 21 07:57:44 2007 (serrano)                */
;*    Copyright   :  2007 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    Functions for dealing with weblets.                              */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hz_weblet
   
   (import hz_config)
   
   (export (class weblet
	      (createstamp::int (default -1))
	      (updatestamp::int (default -1))
	      (installstamp::int (default -1))
	      (driver::bstring (default "hz"))
	      (name::bstring read-only)
	      (version::bstring read-only)
	      (install::bstring (default ""))
	      (url read-only)
	      (home read-only)
	      (publisher read-only)
	      (author read-only)
	      (category::bstring read-only)
	      (minhop::bstring read-only)
	      (maxhop::bstring read-only)
	      (title::bstring read-only)
	      (comment::bstring read-only (info "BLOB"))
	      (signature::bstring read-only (default "")))

	   (weblet->list::pair ::weblet)
	   (info->weblet::weblet ::pair #!key name version url)))

;*---------------------------------------------------------------------*/
;*    weblet->list ...                                                 */
;*---------------------------------------------------------------------*/
(define (weblet->list w)
   (map (lambda (f) ((class-field-accessor f) w))
	(class-all-fields (object-class w))))

;*---------------------------------------------------------------------*/
;*    info->weblet ...                                                 */
;*    -------------------------------------------------------------    */
;*    Supported weblet.info fields are:                                */
;*                                                                     */
;*      - charset: the charset of the info file                        */
;*      - name: the name of the weblet                                 */
;*      - author:                                                      */
;*      - url: download url                                            */
;*      - home: home page                                              */
;*      - publisher: the optional publisher that publishes updates     */
;*      - category:                                                    */
;*      - minhop: the minimal Hop version that can run the weblet      */
;*      - maxhop: the maximal Hop version that can run the weblet      */
;*      - title:                                                       */
;*      - comment:                                                     */
;*      - signature:                                                   */
;*                                                                     */
;*    Extra fields are simply ignored by HZ.                           */
;*---------------------------------------------------------------------*/
(define (info->weblet info::pair #!key name version url)
   
   (define (find key default)
      (cond
	 ((assq key info) => cadr)
	 (else default)))

   (unless (and (list? info)
		(every? (lambda (x) (and (list? x) (pair? (cdr x)))) info))
      (raise
       (instantiate::&io-parse-error
	  (proc 'info->weblets)
	  (msg "Illegal info list")
	  (obj info))))

   (let* ((charset (find 'charset (hop-locale)))
	  (cs-convert (charset-converter charset (hop-charset)))
	  (convert (lambda (x)
		      (if (string? x)
			  (cs-convert x)
			  x)))
	  (name (let ((v (find 'name name)))
		   (if (or (not (string? name)) (string=? v name))
		       (convert v)
		       (error 'info->weblet
			      "weblet name mismatch"
			      (format "~a vs ~a" name v)))))
	  (version (let ((v (find 'version (or version "0.0.0"))))
		      (if (or (not (string? version)) (string=? v version))
			  (convert v)
			  (error 'info->weblet
				 (format "weblet ~a, version mismatch" name)
				 (format "~a vs ~a" version v)))))
	  (publisher (convert (find 'publisher #f)))
	  (url (let ((u (convert (find 'url url))))
		  (cond
		     (u u)
		     (publisher (format "~a/~a-~a.hz"
					(dirname publisher)
					name
					version))
		     (else (error 'info->weblet
				  "Url or Publisher should be given"
				  name))))))
      (instantiate::weblet
	 (name name)
	 (version version)
	 (url url)
	 (publisher publisher)
	 (home (find 'home #f))
	 (author (convert (find 'author #f)))
	 (category (let ((c (convert (find 'category "misc"))))
		      (if (member c (hz-categories))
			  c
			  "other")))
	 (minhop (find 'minhop "0"))
	 (maxhop (find 'maxhop "z"))
	 (title (convert (find 'title "")))
	 (comment (convert (find 'comment ""))))))
