;*=====================================================================*/
;*    serrano/prgm/project/hop/2.0.x/weblets/test/paned.hop            */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Mon Jul  2 13:32:43 2007                          */
;*    Last change :  Thu Feb  4 07:06:13 2010 (serrano)                */
;*    Copyright   :  2007-10 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    Paneds                                                           */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module weblet_test-paned
   (import weblet_test)
   (export test/paned))

;*---------------------------------------------------------------------*/
;*    <MYPAN> ...                                                      */
;*---------------------------------------------------------------------*/
(define (<MYPAN> orientation)
   (let ((pan (<PANED> :fraction 60 :orientation orientation
		 :style "width: 400px; height: 200px;"
		 (<PAN>
		    (let ((enum (iota 5 1)))
		       (<DIV> :style { overflow: auto }
			  (<TABLE> :border 1
			     (<TR> (<TD>) (map <TH> enum))
			     (map (lambda (v1)
				     (<TR>
					(cons (<TH> v1)
					      (map (lambda (v2)
						      (<TD> (* v1 v2)))
						   enum))))
				  enum)))))
		 (<PAN>
		    (let ((enum (iota 5 1)))
		       (<DIV> :style { overflow: auto }
			  (<TABLE> :border 1
			     (<TR> (<TD>) (map <TH> enum))
			     (map (lambda (v1)
				     (<TR>
					(cons (<TH> v1)
					      (map (lambda (v2)
						      (<TD> (+ v1 v2)))
						   enum))))
				  enum))))))))
      (<DIV> :style "margin-bottom: 2ex; border: 1px dashed black; padding: 10px;"
	 (<BUTTON> :onclick ~(let ((v (paned-fraction $pan)))
				(when (> v 5)
				   (paned-fraction-set! $pan (- v 5))))
	    "<")
	 (<BUTTON> :onclick ~(let ((v (paned-fraction $pan)))
				(when (< v 95)
				   (paned-fraction-set! $pan (+ v 5))))
	    ">")
	 pan)))

;*---------------------------------------------------------------------*/
;*    test/paned ...                                                   */
;*---------------------------------------------------------------------*/
(define-service (test/paned)
   (<TEST-HTML> :include "hop-paned"
      :source (service-resource test/paned "paned.hop")
      (<DIV> :class "comment"
	 "This test checks Pans. Some browsers (e.g., Opera on PDAs)
do emit mouse move events. Hence, on these browsers, the pan cannot
be resized with the mouse.")
      (<H3> "A vertical Paned")
      (<MYPAN> 'vertical)
      (<H3> "A horizontal Paned")
      (<MYPAN> 'horizontal)))
	    

