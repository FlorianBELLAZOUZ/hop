(module hophome_demos-rss
   (export (home/demos/rss)))

(define (make-rss channel items)
   (<FL> items))

(define (make-channel #!key link title)
   (<STRONG> (<A> :href link title)))

(define (alternate links)
   (when (pair? links)
      (let ((e (assq 'alternate links)))
	 (when (pair? e)
	    (let ((c (assq 'href (cdr e))))
	       (when (pair? c)
		  (cdr c)))))))

(define (make-item #!key links title date categories summary)
   (<FLITEM>
      (<FLHEAD> title)
      (<DIV>
	 :class "entry"
	 (<A> :href (alternate links) title)
	 (if date (list "(" date ")") "")
	 (if categories (<I> categories))
	 summary)))

(define (rss->html url)
   (with-url url
      (lambda (h)
	 (with-input-from-string h
	    (lambda ()
	       (feed-parse (current-input-port) make-rss make-channel make-item))))))

(define-service (home/demos/rss)
   (<HTML>
      (<HEAD>
	 :title "Home Rss demo"
	 :include "hop-foldlist" "hop-tabslider"
	 :css (service-resource home/demos/rss "rss.hss"))
      (<BODY>
	 (<H1> "RSS stream reader")
	 (<P> [This demonstration download lazyly. It uses the HOP broker to
		    download the streams. It uses the TABSLIDER and FLITEM
		    HOP widget to display the articles.])
	 (<TABSLIDER>
	    (map (lambda (url)
		    (<TSPAN>
		       (<TSHEAD> (cadr url))
		       (<DELAY>
			  (lambda ()
			     (rss->html (car url))))))
		 '(("http://kernel.org/kdist/rss.xml" "Linux Kernel")
		   ("http://lambda-the-ultimate.org/node/feed" "Lambda the Ultimate")
		   ("http://www.gentoo-portage.com/RSSfeed" "Gentoo")
		   ("http://rss.slashdot.org/Slashdot/slashdot" "Slashdot")
		   ("http://rss.freshmeat.net/freshmeat/feeds/fm-releases-global" "Freshmeat")))))))
