Here is the procedure for compiling and installing HOP on a Unix system.

== 1. Requirements ==

  * HOP //requires// GNU-make.
  * HOP //requires// [[http://www.inria.fr/mimosa/fp/Bigloo|Bigloo]] version 3.0c or higher.

== 2. Summary of a full HOP compilation and installation ==

   $ ./configure
   $ make
   $ make install # as root


The rest of this document details each of these steps.

== 3. Configuring HOP ==

  - Edit the ++configure++ file and set ++bindir++, ++libdir++, ++mandir++,
 and ++bigloo++ variables (//none// of these variables can be 
 changed once the installation process is initiated). Alternatively,
 instead of setting these `configure' variables, you may use the
 ++--prefix++ option.

  - Configure HOP for your machine by invoking:
    ./configure

 or
    ./configure --prefix=<your-prefix>


 When the system is ready to be compiled, configure prints a summary of 
 the settings and the message ++configuration done.++.


== 4. Compiling HOP ==

Type:
    make


== 5. Installing HOP ==

Type:
    make install


Note: on some architecture you will be needing to tell the 
loader where to find the HOP shared library. This can be done 
two ways:

  * setting the shell ++LD_LIBRARY_PATH++ variable. For instance,
 using the default settings one should use:
   LD_LIBRARY_PATH=/usr/local/lib/hop/<VERSION>:$LD_LIBRARY_PATH
   export LD_LIBRARY_PATH
  
  * updating the /etc/ld.so.conf file (read by ++ldconfig++ man page).

== 6. Running HOP ==

Once installed, HOP can be run with a command such as:

    hop -p 8080

== 7. Testing HOP ==

Within a CSS2/DOM2/EcmaScript (aka Javacript) compliant web browser
(e.g., Firefox 1.5 or higher) visit the URL:

    http://localhost:8080/hop


If the test succeeds, you should be presented with several icons. Clicking
each of them spawns a HOP weblet.

However, the first time you start up, you will be logged in as the
anonymous user which doesn't have the privileges to access most
weblets.  To create user accounts with more privileges, you can use
the Wizard weblet, located here:

    http://localhost:8080/hop/wizard

When you save the settings in that weblet, you will have created new
user accounts, but you'll need to restart Hop to re-login with them.


== 8. Using HOP as a Web proxy ==

HOP can be used as a Web proxy. Once you have configured your browser to
use it as a proxy, you will be to access HOP weblet using URLs such as:

    http://hop/hop
    http://hop/hop/doc
    ...


== 9. Uninstalling HOP ==

With the super user privilege, execute the command:

    make uninstall


== 10. Unconfiguring and Cleaning HOP ==

Issue the command:

    make cleanall


This removes all the automatically generated documents from the disk.

  
