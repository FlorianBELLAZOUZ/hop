;*=====================================================================*/
;*    serrano/prgm/project/hop/weblets/home/home.hop                   */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Wed May 10 16:18:48 2006                          */
;*    Last change :  Sun May 14 18:30:36 2006 (serrano)                */
;*    Copyright   :  2006 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    HOP home page weblet.                                            */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module hophome
   (import  hophome_config
	    hophome_widgets
	    hophome_demo))

;*---------------------------------------------------------------------*/
;*    home ...                                                         */
;*---------------------------------------------------------------------*/
(define-service (home)
   (let ((req (the-current-request)))
      (let ((agent (assq 'user-agent: (http-request-header req))))
         (if (and (pair? agent)
		  (string? (cdr agent))
                  (or (substring-ci-at? (cdr agent) "Mozilla" 0)
		      (substring-ci-at? (cdr agent) "Opera" 0)
		      (substring-ci-at? (cdr agent) "Konqueror" 0)))
	     (home-main req)
	     (http-service-error
	      req
	      'hop
	      "Your browser is not capable enough for displaying this page.
We suggest to give Firefox a try.")))))

;*---------------------------------------------------------------------*/
;*    wiki-cache ...                                                   */
;*---------------------------------------------------------------------*/
(define wiki-cache
   (instantiate::cache
      (path (make-file-path (hop-rc-directory)
			    "cache"
			    (string-append "home-"
					   (integer->string (hop-port)))))
      (out (lambda (o p)
	      (xml-write o p (hop-char-encoding))))))

;*---------------------------------------------------------------------*/
;*    wiki->hop ...                                                    */
;*---------------------------------------------------------------------*/
(define (wiki->hop file)
   (let* ((path (make-file-name (home-dir) file))
	  (cache (cache-get wiki-cache path)))
      (if (string? cache)
	  (with-input-from-file cache
	     (lambda ()
		(read-string)))
	  (let ((m1 (eval-find-module 'hophome))
		(m2 (eval-module)))
	     (unwind-protect
		(begin
		   (eval-module-set! m1)
		   (let* ((wiki (wiki-file->hop path))
			  (cache (cache-put! wiki-cache path wiki)))
		      (if (string? cache)
			  (with-input-from-file cache
			     (lambda ()
				(read-string)))
			  wiki)))
		(eval-module-set! m2))))))
					   
;*---------------------------------------------------------------------*/
;*    home-main ...                                                    */
;*---------------------------------------------------------------------*/
(define (home-main req)
   (<HOME>
      (<NOTEPAD>
	 :id "home-notepad"
	 :inline #f
	 (<NPHEAD> "")
	 (<NPTAB> :id "Presentation"
		  (<NPTABHEAD> "Presentation")
		  (<DELAY>
		     (lambda ()
			(<DIV>
			   :class "hop-tab"
			   (wiki->hop "presentation.wiki")))))
	 (<NPTAB> :id "download"
		  (<NPTABHEAD> "Download")
		  (<DIV>
		     :class "hop-tab"
		     "not yet"))
	 (<NPTAB> :id "demo"
		  (<NPTABHEAD> "Demonstrations")
		  (<DIV>
		     :align "center"
		     (<DELAY>
			(lambda ()
			   (<DEMO> req)))))
	 (<NPTAB> :id "documentation"
		  (<NPTABHEAD> "Documentations")
		  (<DELAY>
		     (lambda ()
			(<DIV>
			   :class "hop-tab"
			   (wiki->hop "docs.wiki")))))
	 (<NPTAB> :id "license"
		  (<NPTABHEAD> "License")
		  (<DELAY>
		     (lambda ()
			(<DIV>
			   :class "hop-tab"
			   (wiki->hop "license.wiki"))))))))


