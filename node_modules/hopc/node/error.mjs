/*=====================================================================*/
/*    .../prgm/project/hop/3.7.x/node_modules/hopc/node/error.mjs      */
/*    -------------------------------------------------------------    */
/*    Author      :  manuel serrano                                    */
/*    Creation    :  Sat Sep 16 14:11:38 2023                          */
/*    Last change :  Wed Dec 20 18:20:17 2023 (serrano)                */
/*    Copyright   :  2023 manuel serrano                               */
/*    -------------------------------------------------------------    */
/*    Exceptions                                                       */
/*                                                                     */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    The module                                                       */
/*---------------------------------------------------------------------*/
import { readFileSync } from "node:fs";

/*---------------------------------------------------------------------*/
/*    makeString ...                                                   */
/*---------------------------------------------------------------------*/
function makeString(len, line) {
   let s = "";

   for (let i = 0; i < len; i++) {
      if (line.charCodeAt(i) === 9) {
	 s += "\t";
      } else {
	 s += " ";
      }
   }
   return s;
}

/*---------------------------------------------------------------------*/
/*    locToLnumCol ...                                                 */
/*---------------------------------------------------------------------*/
export function locToLnumCol(fname, location) {
   const buf = readFileSync(fname).toString();
   if (location < buf.length) {
      // find the beginning of line
      let beg = location;
      let end = location;

      while (beg >= 0 && buf.charCodeAt(beg) !== 10) {
	 beg--;
      }

      // find the end of line
      while (end < buf.length && buf.charCodeAt(end) !== 10) {
	 end++;
      }

      // extract the line
      const line = buf.substring(beg + 1, end);
      const col = location - beg;
      let lnum = 1, i = 0;

      for (; i < beg && i >= 0; i = buf.indexOf("\n", i + 1)) {
	 lnum++;
      }

      return { beg, end, lnum, col, line };
   } else {
      return { beg: -1, end: -1, lnum: 0, col: 0, line };
   }
}

/*---------------------------------------------------------------------*/
/*    $ioParseError ...                                                */
/*---------------------------------------------------------------------*/
export function $ioParseError(props) {
   if (new.target) {
      // used as a constructor (see parser.mjs)
      Object.assign(this, props);
   } else {
      if ("fname" in props && "location" in props && props.location >= 0) {
	 const { beg, end, lnum, col, line } = locToLnumCol(props.fname, props.location);

	 if (beg >= 0) {
	    // display the error message
	    console.error(`${props.fname}:${lnum}`);
	    console.error(line);
	    console.error(makeString(props.location - (beg + 1), line) + "^\n");
	    
	    console.error(`${props?.msg ?? "Error"}: ${props?.message ?? ""}`);
	    if (props.proc) {
	       console.error(`   at ${props.proc} (${props.fname}:${lnum}:${col})`);
	    }
	 } else {
	    console.error(`${props?.msg ?? "Error"}: ${props?.message ?? ""}`);
	    if (props.proc) {
	       console.error(`   at ${props.proc} (${props.fname}:${lnum}:${col})`);
	    }
	 }
      }
      if ((props?.forceexit)) {
	 process.exit(1);
      }
   }
}

$ioParseError.prototype = SyntaxError.prototype;
