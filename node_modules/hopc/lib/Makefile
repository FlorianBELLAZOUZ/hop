#*=====================================================================*/
#*    serrano/prgm/project/hop/hop/node_modules/hopc/lib/Makefile      */
#*    -------------------------------------------------------------    */
#*    Author      :  Manuel Serrano                                    */
#*    Creation    :  Fri Aug 28 10:00:50 2015                          */
#*    Last change :  Tue Mar 26 08:49:00 2024 (serrano)                */
#*    Copyright   :  2015-24 Manuel Serrano                            */
#*    -------------------------------------------------------------    */
#*    hopc precompilation                                              */
#*=====================================================================*/
do: build

#*---------------------------------------------------------------------*/
#*    Configuration                                                    */
#*---------------------------------------------------------------------*/
PACKAGE=hopc
include ../../Makefile.modules

#*---------------------------------------------------------------------*/
#*    The entries                                                      */
#*---------------------------------------------------------------------*/
.PHONY: build install uninstall hopc ast walk _js2scheme _list

build: ast.js walk.js .afile o
	$(MAKE) o/hopc.$(SHAREDSUFFIX) \
            TARGETNAME=hopc \
            OBJECTS=o/hopc.o
	$(MAKE) o/ast.$(SHAREDSUFFIX) \
            TARGETNAME=ast \
            OBJECTS=o/ast.o
	$(MAKE) o/walk.$(SHAREDSUFFIX) \
            TARGETNAME=walk \
            OBJECTS=o/walk.o
	$(MAKE) o/_js2scheme.$(SHAREDSUFFIX) \
            TARGETNAME=_js2scheme \
            OBJECTS=o/_js2scheme.o
	$(MAKE) o/_list.$(SHAREDSUFFIX) \
            TARGETNAME=_list \
            OBJECTS=o/_list.o

install:
	$(MAKE) mkdir DIR=$(DESTDIR)$(HOPLIBDIR)/$(LIBSDIR)
	$(MAKE) install-module TARGETNAME=_js2scheme
	$(MAKE) install-module TARGETNAME=_list
	$(MAKE) install-module TARGETNAME=hopc
	$(MAKE) install-module TARGETNAME=ast
	$(MAKE) install-module TARGETNAME=walk
	$(RM) -rf $(DESTDIR)$(HOPLIBDIR)/$(HOPFILDIR)/node_modules/$(PACKAGE)/lib/o
	chmod -R $(MODDIR) $(DESTDIR)$(HOPLIBDIR)/$(LIBSDIR)

install-module:
	$(MAKE) install-shared-lib \
                INSTALL="$(INSTALL)" \
                BOOTLIBDIR=$(BUILDDIR)/$(DIR)/o \
                FILDIR=$(LIBSDIR) \
                LIBDIR=$(HOPLIBDIR) \
                LIB=$(TARGETNAME)
	chmod -R $(MODDIR) $(DESTDIR)$(HOPLIBDIR)/hop/$(HOPRELEASE)/$(DIR)
	cp -r ../../$(PACKAGE) $(DESTDIR)$(HOPLIBDIR)/$(HOPFILDIR)/node_modules
	touch $(DESTDIR)$(HOPLIBDIR)/$(LIBSDIR)/$(TARGETNAME).$(SHAREDSUFFIX)
	chmod $(MODEXE) $(DESTDIR)$(HOPLIBDIR)/$(LIBSDIR)/$(TARGETNAME).$(SHAREDSUFFIX)

uninstall:
	$(MAKE) uninstall-module TARGETNAME=_js2scheme
	$(MAKE) uninstall-module TARGETNAME=_list
	$(MAKE) uninstall-module TARGETNAME=hopc
	$(MAKE) uninstall-module TARGETNAME=ast
	$(MAKE) uninstall-module TARGETNAME=walk

uninstall-module:
	$(MAKE) uninstall-shared-lib LIB=$(TARGETNAME).$(SHAREDSUFFIX)

#*---------------------------------------------------------------------*/
#*    walk.js ...                                                      */
#*---------------------------------------------------------------------*/
walk.js: ../../../js2scheme/ast.scm
	date +'/* generated file (node_modules/hopc/lib/Makefile), do not edit (%d %B %Y) */' > $@
	echo "" >> $@
	echo "import * as ast from './ast.js';" >> $@
	echo "" >> $@
	echo "" >> $@
	(cd $(BUILDDIR)/js2scheme; $(BIGLOO) -srfi generate-javascript-walker -expand -o /dev/null ast.scm) >> $@

#*---------------------------------------------------------------------*/
#*    ast.js                                                           */
#*---------------------------------------------------------------------*/
ast.js: 
	date +'/* generated file (mkjsast.scm), do not edit (%d %B %Y) */' > $@
	echo "" >> $@
	$(BUILDBINDIR)/mkjsast "hop" ../../../js2scheme/ast >> $@

#*---------------------------------------------------------------------*/
#*    lib                                                              */
#*---------------------------------------------------------------------*/
o:
	mkdir o

hopc: o
	$(MAKE) o/$(TARGETNAME).$(SHAREDSUFFIX)

ast: o
	$(MAKE) o/$(TARGETNAME).$(SHAREDSUFFIX)

walk: o
	$(MAKE) o/$(TARGETNAME).$(SHAREDSUFFIX)

_js2scheme: o
	$(MAKE) o/$(TARGETNAME).$(SHAREDSUFFIX)

_list: o
	$(MAKE) o/$(TARGETNAME).$(SHAREDSUFFIX)

o/$(TARGETNAME).$(SHAREDSUFFIX): $(OBJECTS)
	$(MAKE) shared-lib \
             LDINSTALLNAMEDIR=$(DESTDIR)$(HOPLIBDIR)/$(LIBSDIR) \
             BOOTLIBDIR=$(BUILDDIR)/$(DIR)/o \
             FORCELD=true \
             LIBDEST=$@ \
             SONAME=$(TARGETNAME).$(SHAREDSUFFIX) \
             LDOPTS="-L$(BUILDLIBDIR) -L$(BIGLOOLIBDIR) $(LDOPTS)"

#*---------------------------------------------------------------------*/
#*    .afile                                                           */
#*---------------------------------------------------------------------*/
.afile: _js2scheme.hop _list.hop
	(cd $(dir $@) && $(AFILE) -suffix hop $(notdir $^) -o $(notdir $@))

#*---------------------------------------------------------------------*/
#*    clean                                                            */
#*---------------------------------------------------------------------*/
clean:
	$(RM) -f walk.js
	$(RM) -f ast.js
	$(RM) -rf o

devclean:
	$(RM) -f .afile

distclean: devclean

#*---------------------------------------------------------------------*/
#*    Suffixes                                                         */
#*---------------------------------------------------------------------*/
.SUFFIXES:
.SUFFIXES: .scm .o .hop .js

#*---------------------------------------------------------------------*/
#*    explicit rules                                                   */
#*---------------------------------------------------------------------*/
o/_js2scheme.o: _js2scheme.hop
	@ $(call compile3,$(HOPC),$(HFLAGS),$(BCFLAGS) -dload-sym,$(BLFLAGS),-c,$< -o $@)

o/_list.o: _list.hop
	@ $(call compile3,$(HOPC),$(HFLAGS),$(BCFLAGS) -dload-sym,$(BLFLAGS),-c,$< -o $@)

#*---------------------------------------------------------------------*/
#*    The implicit rules                                               */
#*---------------------------------------------------------------------*/
o/%.o: %.scm
	@ $(call compile2,$(BIGLOO),$(BCFLAGS),$(BLFLAGS),-c,$< -o $@)

o/%.o: %.hop
	@ $(call compile3,$(HOPC),$(HFLAGS),$(BCFLAGS),$(BLFLAGS),-c,$< -o $@)

%.scm: %.hop
	@ $(call compile3,$(HOPC),$(HFLAGS),$(BCFLAGS),$(BLFLAGS),-s,$< -o $@)

o/%.o: %.js
	@ $(call compile3,$(HOPC),$(HSFLAGS),$(BCFLAGS) -fno-inlining -copt -Os -dload-sym,$(BLFLAGS),$(BHOPCFLAGS) -c -fno-inlining --js-no-module-main --js-module-name __nodejs_$* --js-module-path $* -O2s,$< -o $@)

