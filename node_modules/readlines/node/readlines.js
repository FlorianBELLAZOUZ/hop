/*=====================================================================*/
/*    .../hop/hop/node_modules/readlines/node/hop:readlines.js         */
/*    -------------------------------------------------------------    */
/*    Author      :  manuel serrano                                    */
/*    Creation    :  Tue Oct 17 08:23:59 2023                          */
/*    Last change :  Tue Oct 17 09:00:34 2023 (serrano)                */
/*    Copyright   :  2023 manuel serrano                               */
/*    -------------------------------------------------------------    */
/*    Nodejs port of the readlines module.                             */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    Imports                                                          */
/*---------------------------------------------------------------------*/
const { readSync, fstatSync } = require("fs");

/*---------------------------------------------------------------------*/
/*    readLinesSync ...                                                */
/*---------------------------------------------------------------------*/
function readLinesSync(fd) {
   let size = fstatSync(fd).size;

   if (size === 0) {
      return [];
   } else {
      let pos = 0;
      let buffer = new Buffer(size); // single buffer with file data
      let done = false;
      let bytesRead = 0;
      
      while (!done) {
	 let threw = true;

         bytesRead = readSync(fd, buffer, pos, size - pos);
	 
	 pos += bytesRead;
	 done = (bytesRead === 0) || (pos >= size);
      }

      if (pos < size) {
	 buffer = buffer.slice(0, pos);
      }
      
      const str = buffer.toString();
      const res = str.split("\n");
      if (res[res.length -1] === "\n") {
	 res.pop();
      }

      return res;
   }
}

/*---------------------------------------------------------------------*/
/*    readLines ...                                                    */
/*---------------------------------------------------------------------*/
function readLines(fd, cb) {
   if (cb) {
      //return readLinesAsync(fd, db);
   } else {
      return readLinesSync(fd);
   }
}

/*---------------------------------------------------------------------*/
/*    readLinesGen ...                                                 */
/*---------------------------------------------------------------------*/
function* readLinesGen(fd) {
   let size = fstatSync(fd).size;

   if (size === 0) {
      return false;
   } else {
      let pos = 0;
      let buffer = new Buffer(size); // single buffer with file data
      let strbuffer = "";
      let done = false;
      let bytesRead = 0;
      
      while (true) {
	 let threw = true;

         bytesRead = readSync(fd, buffer, pos, size - pos);

	 pos += bytesRead;
	 done = (bytesRead === 0) || (pos >= size);

	 const b = (bytesRead < (size - pos))
	    ? buffer.slice(0, size -pos).toString()
	    : buffer.toString();
	    
	 strbuffer += b;

	 if (strbuffer.indexOf("\n") >=0 ) {
	    const b = strbuffer.split("\n");
	    for (let i = 0; i < b.length - 1; i++) {
	       yield b[i];
	    }
	    strbuffer = b[b.length - 1];
	 }

	 if (done) {
	    return true;
	 }
      }
   }
}
   
/*---------------------------------------------------------------------*/
/*    exports                                                          */
/*---------------------------------------------------------------------*/
exports.readLines = readLines;
exports.readLinesGen = readLinesGen;
