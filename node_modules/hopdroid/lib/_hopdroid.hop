;*=====================================================================*/
;*    .../project/hop/hop/node_modules/hopdroid/lib/_hopdroid.hop      */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jul  6 06:15:53 2014                          */
;*    Last change :  Sun May 17 14:16:58 2020 (serrano)                */
;*    Copyright   :  2014-20 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    hopdroid bindings                                                */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _texinfo

   (library hopscript hop hopwidget nodejs)

   (cond-expand ((library hopdroid) (library hopdroid)))
   
   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    phone-sig ...                                                    */
;*---------------------------------------------------------------------*/
(define phone-sig (cons 1 2))

;*---------------------------------------------------------------------*/
;*    phone? ...                                                       */
;*---------------------------------------------------------------------*/
(define (phone? o)
   (cond-expand
      ((library hopdroid)
       (when (isa? o JsWrapper)
	  (with-access::JsWrapper o (data)
	     (isa? data androidphone))))
      (else
       #f)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this scope module)
   (&with!
      
      (define js-hopdroid-prototype
	 (instantiateJsObject
	    (__proto__ (js-object-proto %this))
	    (elements ($create-vector 3))))
      
      (define exports (js-get module (& "exports") %this))
      
      ;; bind the module in the texinfo scope
      (js-put! scope (& "module") module #f %this)

      (define (bind-phone-getter! obj name getter)
	 (js-bind! %this obj (& "sdk")
	    :get (js-make-function %this
		    (lambda (this)
		       (if (phone? this)
			   (with-access::JsWrapper this (data)
			      (js-string->jsstring (getter data)))
			   (js-undefined)))
		    0 (& "get"))
	    :writable #f
	    :enumerable #t))
      
      ;; phone-prototype
      (define phone-prototype
	 (cond-expand
	    ((library hopdroid)
	     (with-access::JsGlobalObject %this (js-object)
		(let ((obj (js-new0 %this js-object)))
		   ;; sdk
		   (bind-phone-getter! obj "sdk"
		      (lambda (data)
			 (with-access::androidphone data (sdk) sdk)))
		   ;; model
		   (bind-phone-getter! obj "model"
		      (lambda (data)
			 (with-access::androidphone data (model) model)))
		   ;; product
		   (bind-phone-getter! obj "product"
		      (lambda (data)
			 (with-access::androidphone data (product) product)))
		   ;; addEventListener
		   (js-bind! %this obj (& "addEventistener")
		      :value (js-make-function %this
				(lambda (this event ltn)
				   (if (phone? this)
				       (with-access::JsWrapper this (data)
					  (add-event-listener! data
						(js-tostring event %this)
					     (lambda (e)
						(js-call1 ltn this e %this))))))
				2 (& "addEventListener"))
		      :writable #f
		      :enumerable #t)
		   ;; the prototype
		   obj)))
	    (else
	     (js-undefined))))
      
      ;; phone
      (js-bind! %this exports (& "phone")
	 :value (js-make-function %this
		   (lambda (this)
		      (cond-expand
			 ((library hopdroid)
			  (let ((p (instantiate::JsWrapper
				      (obj phone-sig)
				      (cmap (instantiate::JsConstructMap))
				      (data (instantiate::androidphone)))))
			     (js-object-proto-set! p phone-prototype)
			     (js-object-mode-set! p (js-object-default-mode))
			     p))
			 (else
			  (js-undefined))))
		   0 (& "phone"))
	 :writable #f
	 :enumerable #f)))

hopscript
