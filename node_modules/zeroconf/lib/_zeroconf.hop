;*=====================================================================*/
;*    .../project/hop/hop/node_modules/zeroconf/lib/_zeroconf.hop      */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Thu Sep  6 15:19:35 2018                          */
;*    Last change :  Sat Mar 19 15:22:11 2022 (serrano)                */
;*    Copyright   :  2018-22 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    ZEROCONF library bindings                                        */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _zeroconf
   (library hopscript hop nodejs)
   (export (hopscript %this this %scope %module)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*    -------------------------------------------------------------    */
;*    This is the function called by JavaScript when the Hop module    */
;*    is required. It binds the exports field of the newly             */
;*    allocated module                                                 */
;*---------------------------------------------------------------------*/
(define (hopscript %this this %scope %module)
   
   (js-export (Zeroconf)
      
      (define jszc #f)
      
      (define (start-zeroconf)
	 (unless jszc
	    (let ((zc (zeroconf-start)))
	       (set! jszc
		  (instantiate::JsWrapper
		     (obj zc)
		     (cmap (js-make-jsconstructmap))
		     (data '()))))))
      
      (define (get-zc this)
	 (if (eq? jszc this)
	     (with-access::JsWrapper jszc (obj)
		obj)
	     (js-raise-type-error %this 
		"zeroconf: not a zeroconf controller" this)))
      
      (define (addEventListener this event proc)
	 (let ((zc (get-zc this)))
	    (if (not (js-procedure? proc))
		(js-raise-type-error %this 
		   "zeroconf: wrong listener" proc)
		(add-event-listener! zc (js-tostring event %this)
		   (lambda (e::zeroconf-service-event)
		      (proc (instantiate::JsWrapper
			       (data '())
			       (obj e)
			       (cmap (js-make-jsconstructmap)))))))))

      (define (publish this name port type opts)
	 (let ((zc (get-zc this)))
	    (zeroconf-publish! :name (js-tostring name %this)
	       (js-tointeger type %this))))
      
      (define Zeroconf
	 (unless jszc
	    (let ((zc (zeroconf-start)))
	       (set! jszc
		  (instantiate::JsWrapper
		     (obj zc)
		     (cmap (js-make-jsconstructmap))
		     (data '())))
	       ;; addEventListener
	       (js-bind! %this jszc (& "addEventListener")
		  :value (js-make-function %this
			    addEventListener
			    (js-function-arity addEventListener)
			    (js-function-info :name "addEventListener" :len 2))
		  :writable #f
		  :enumerable #t)
	       ;; publish
	       (js-bind! %this jszc (& "publish")
		  :value (js-make-function %this
			    publish
			    (js-function-arity publish)
			    (js-function-info :name "publish" :len 4))
		  :writable #f
		  :enumerable #t)))
	 jszc)))
