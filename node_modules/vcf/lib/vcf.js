/*=====================================================================*/
/*    serrano/prgm/project/hop/hop/node_modules/xml/lib/xml.js         */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Mar 13 07:37:34 2018                          */
/*    Last change :  Thu Sep  6 16:06:30 2018 (serrano)                */
/*    Copyright   :  2018-21 Manuel Serrano                            */
/*    -------------------------------------------------------------    */
/*    XML dynamic element creation                                     */
/*=====================================================================*/
"use hopscript";

/*---------------------------------------------------------------------*/
/*    imports                                                          */
/*---------------------------------------------------------------------*/
const fs = require( "fs" );
const _vcf = require( "./_vcf.hop" );
const _bbdb = require( "./_bbdb.hop" );

/*---------------------------------------------------------------------*/
/*    loadVCF ...                                                      */
/*---------------------------------------------------------------------*/
export function loadVCF( file, options ) {
   return _vcf.load( file ).map( vc => new vCard( vc ) );
}

/*---------------------------------------------------------------------*/
/*    loadBBDB ...                                                     */
/*---------------------------------------------------------------------*/
export function loadBBDB( file, options ) {
   return _bbdb.load( file ).map( vc => new vCard( vc ) );
}

/*---------------------------------------------------------------------*/
/*    load ...                                                         */
/*---------------------------------------------------------------------*/
export function load( file, options ) {
   if( file.match( /.vcf$/ ) ) {
      return loadVCF( file, options );
   } else if( file.match( /.bbdb$/ ) ) {
      return loadBBDB( file, options );
   } else {
      return loadVCF( file, options );
   }
}

/*---------------------------------------------------------------------*/
/*    parse ...                                                        */
/*---------------------------------------------------------------------*/
function parse( str ) {
   return new vCard( _vcf.parse( str ) );
}

/*---------------------------------------------------------------------*/
/*    constants                                                        */
/*---------------------------------------------------------------------*/
const addrProps = 
   [ "pobox", "ext", "street", "city", "region", "zip", "country" ];

/*---------------------------------------------------------------------*/
/*    splitLines ...                                                   */
/*---------------------------------------------------------------------*/
function splitLines( prelude, data ) {
   const dlen = data.length;
   let i = 74 - prelude.length;
   let str = data.substring( 0, i );
   
   for( ; i < dlen; i += 73 ) {
      str += "\n ";
      str += data.substring( i, i + 73 );
   }
   
   return str;
}

/*---------------------------------------------------------------------*/
/*    photoToString ...                                                */
/*---------------------------------------------------------------------*/
function photoToString( photo ) {
   let str = "PHOTO;ENCODING=";
   const data = photo.data;

   str += photo.encoding;
   str += ";";
   str += photo.format;       
   str += ":";
   
   str += splitLines( str, data );
   
   return str + "\n";
}

/*---------------------------------------------------------------------*/
/*    vCard ...                                                        */
/*---------------------------------------------------------------------*/
export class vCard {
   
   constructor( vcard ) {
      if( _vcf.isVCard.call( vcard ) ) {
      	 this.version = _vcf.version.call( vcard );
      	 this.uid = _vcf.uid.call( vcard );
      	 this.familyname = _vcf.familyname.call( vcard );
      	 this.firstname = _vcf.firstname.call( vcard );
      	 this.nickname = _vcf.nickname.call( vcard );
      	 this.emails = _vcf.emails.call( vcard );
      	 this.phones = _vcf.phones.call( vcard );
      	 this.addresses = _vcf.addresses.call( vcard );
      	 this.photo = _vcf.photo.call( vcard );
      	 this.url = _vcf.url.call( vcard );
      	 this.birthday = _vcf.birthday.call( vcard );
      	 this.sound = _vcf.sound.call( vcard );
      	 this.lang = _vcf.lang.call( vcard );
      	 this.related = _vcf.related.call( vcard );
      	 this.color = _vcf.color.call( vcard );
      	 this.thumbnail = _vcf.thumbnail.call( vcard );
      	 this.key = _vcf.key.call( vcard );
      	 this.notes = _vcf.notes.call( vcard );
      	 this.extras = _vcf.extras.call( vcard );
      } else {
	 this.version = "2.1";
      	 this.uid = undefined;
      	 this.familyname = undefined;
      	 this.firstname = undefined;
      	 this.nickname = undefined;
      	 this.emails = [];
      	 this.phones = [];
      	 this.addresses = [];
      	 this.photo = undefined;
      	 this.url = undefined;
      	 this.birthday = undefined;
      	 this.sound = undefined;
      	 this.lang = undefined;
      	 this.related = undefined;
      	 this.color = undefined;
      	 this.thumbnail = undefined;
      	 this.key = undefined;
      	 this.notes = [];
      	 this.extras = {};
      }
   }
   
}

/*---------------------------------------------------------------------*/
/*    toVCARD ...                                                      */
/*---------------------------------------------------------------------*/
export function toVCARD( vcard ) {
   let str = "BEGIN:VCARD\n";

   // VERSION:
   if( vcard.url ) {
      str += "VERSION:";
      str += vcard.version;
      str += ";\n";
   } else {
      str += "VERSION:2.1\n";
   }
   
   // UID:
   if( vcard.uid ) {
      str += "UID:";
      str += vcard.uid;
      str += "\n";
   }
   
   // FN: & N:
   if( vcard.familyname || vcard.firstname ) {
      str += "FN:";
      if( vcard.familyname ) {
	 str += vcard.familyname;
	 str += " "
      }
      if( vcard.firstname ) {
	 str += vcard.firstname;
      }
      str += "\n";
      
      str += "N:;";
      if( vcard.familyname ) {
	 str += vcard.familyname;
	 str += ";"
      }
      if( vcard.firstname ) {
	 str += vcard.firstname;
	 str += ";"
      }
      str += ";;\n"
   }
   
   // NICKNAME:
   if( vcard.nickname ) {
      str += "NICKNAME:";
      str += vcard.nickname;
      str += "\n";
   }
   
   // TEL:
   for( let i = 0; i < vcard.phones.length; i++ ) {
      if( vcard.phones[ i ].number ) {
	 str += "TEL;";
	 str += vcard.phones[ i ].label;
	 str += ":";
	 str += vcard.phones[ i ].number;
	 str += "\n";
      }
   }
   
   // EMAIL:
   for( let i = 0; i < vcard.emails.length; i++ ) {
      const email = vcard.emails[ i ];
      if( email.email ) {
	 str += "EMAIL;";
	 str += email.label;
	 str += ":";
	 str += email.email;
	 str += "\n";
      }
   }
   
   // ADR:
   for( let i = 0; i < vcard.addresses.length; i++ ) {
      const addr = vcard.addresses[ i ];
      if( addr.street ) {
	 str += "ADR;";
	 str += addr.label;
	 str += ":";
	 for( let p of addrProps ) {
	    if( addr[ p ] ) {
	       str += addr[ p ];
	    }
	    str += ";";
	 }
	 
	 str += "\n";
      }
   }

   // URL:
   if( vcard.url ) {
      str += "URL:";
      str += vcard.url;
      str += ";\n";
   }
   
   // LANG:
   if( vcard.lang ) {
      str += "LANG:";
      str += vcard.lang;
      str += ";\n";
   }
   
   // PHOTO:
   if( vcard.photo ) {
      str += photoToString( vcard.photo );
   }
   
   // RELATED:
   if( vcard.related ) {
      str += "RELATED:";
      str += vcard.related;
      str += ";\n";
   }
   
   // KEY:
   if( vcard.key ) {
      str += "KEY:";
      str += vcard.key;
      str += ";\n";
   }
   
   // X-COLOR:
   if( vcard.color ) {
      str += "X-COLOR:";
      str += vcard.color;
      str += ";\n";
   }
   
   // X-THUMBNAIL:
   if( vcard.thumbnail ) {
      str += photoToString( vcard.thumbnail );
   }
   
   // XX-EXTRAS:
   for( let k in vcard.extras ) {
      str += k.toUpperCase();
      str += ":";
      str += vcard.extras[ k ];
      str += "\n";
   }
   
   str += "END:VCARD\n";
   
   return str;
}

/*---------------------------------------------------------------------*/
/*    bbdb ...                                                         */
/*---------------------------------------------------------------------*/
export function toBBDB( vcard ) {
   let str = "[";
   // firstname
   if( vcard.firstname ) {
      str += '"';
      str += vcard.firstname;
      str += '" ';
   } else {
      str += '"" ';
   }
   // name
   if( vcard.familyname ) {
      str += '"';
      str += vcard.familyname;
      str += '" '
   } else {
      str += '"" ';
   }
   // affix
   str += "nil "
   // aka
   if( vcard.nickname ) {
      str += '"';
      str += vcard.nickname;
      str += '"';
   } else {
      str += 'nil ';
   }
   // org
   if( vcard.org ) {
      str += '"';
      str += vcard.org;
      str += '"';
   } else {
      str += 'nil ';
   }
   // phones
   if( vcard.phones.length > 0 ) {
      const phones = vcard.phones;
      const len = phones.length;
      
      str += "(";
      for( let i = 0; i < len; i++ ) {
	 str += '["';
	 str += phones[ i ].label;
	 str += '" "';
	 str += phones[ i ].number;
	 str += ((i < len - 1) ? '"] ' : '"]');
      }
      str += ") ";
   } else {
      str += 'nil ';
   }
   // addresses
   if( vcard.addresses.length > 0 ) {
      const addresses = vcard.addresses;
      const len = addresses.length;
      
      str += "(";
      for( let i = 0; i < len; i++ ) {
	 const addr = addresses[ i ];
	 str += '["';
	 str += addr.label;
	 
	 // address.street
	 str += '" (';
	 const street = addr.street;
	 
	 for( let j = 0; j < street.length; j++ ) {
	    str += '"';
	    str += street[ j ];
	    str += ((j < street.length - 1) ? '" ' : '"');
	 }
	 str += '")';
	 
	 // address.city
	 str += ' "';
	 str += addr.city
	 str += '"';
	 
	 // address.pobox
	 str += ' "';
	 str += addr.pobox
	 str += '"';
	 
	 // address.zip
	 str += ' "';
	 str += addr.zip
	 str += '"';
	 
	 // address.coutrny
	 str += ' "';
	 str += addr.country
	 str += '"';
	 
	 str += ((i < len - 1) ? '] ' : ']');
      }
      str += ") ";
   } else {
      str += 'nil ';
   }
   // 
   str += "]\n";
   
   return str;
}

/*---------------------------------------------------------------------*/
/*    stringify ...                                                    */
/*---------------------------------------------------------------------*/
export function stringify( vcard, format = "vcard" ) {
   if( format === "bbdb" ) {
      return toBBDB( vcard );
   } else {
      return toVCARD( vcard );
   }
}

/*---------------------------------------------------------------------*/
/*    Symbol.compiler ...                                              */
/*---------------------------------------------------------------------*/
exports[ Symbol.compiler ] = (file, options) => {
   const val = load( file, options );
   
   if( options && options.target ) {
      var fd = fs.openSync( options.target, "w" );
      try {
	 var buf = JSON.stringify( val );
	 fs.write( fd, buf, 0, buf.length );
	 
	 return {
	    type: "filename",
	    value: file
	 }
      } finally {
	 fs.closeSync( options.target );
      }
   } else {
      return {
	 type: "value",
	 value: val
      }
   }
}

/*---------------------------------------------------------------------*/
/*    exports                                                          */
/*---------------------------------------------------------------------*/
exports.loadVCF = loadVCF;
exports.loadBBDB = loadBBDB;
exports.load = load;
exports.parse = parse;
exports.vCard = vCard;
exports.toVCARD = toVCARD;
exports.toBBDB = toBBDB;
exports.stringify = stringify;
