;*=====================================================================*/
;*    serrano/prgm/project/hop/hop/node_modules/vcf/lib/_bbdb.hop      */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Thu Sep  6 15:19:35 2018                          */
;*    Last change :  Wed Jan  6 13:25:39 2021 (serrano)                */
;*    Copyright   :  2018-21 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    bbdb Hop parser                                                  */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module bbdb
   (library hopscript hop hopwidget nodejs web mail)
   (export (hopscript %this this %scope %module)))

;*---------------------------------------------------------------------*/
;*    vcard<=? ...                                                     */
;*---------------------------------------------------------------------*/
(define (vcard<=? x y)
   (with-access::vcard x ((xn familyname)
			  (xf firstname))
      (with-access::vcard y ((yn familyname)
			     (yf firstname))
	 (let ((xn (if (string? xn) xn "~"))
	       (xf (if (string? xf) xf "~"))
	       (yn (if (string? yn) yn "~"))
	       (yf (if (string? yf) yf "~")))
	    (cond
	       ((string<? xn yn) #t)
	       ((string>? xn yn) #f)
	       ((string<=? xf yf) #t)
	       ((string>? xf yf) #f)
	       (else #t))))))
      
;*---------------------------------------------------------------------*/
;*    bbdb-parse-format ...                                            */
;*---------------------------------------------------------------------*/
(define (bbdb-parse-format port)
   (let loop ((line (read-line port)))
      (let ((line (read-line port)))
	 (if (eof-object? line)
	     (raise
		(instantiate::&io-parse-error
		   (proc "bbdb")
		   (msg "premature end of file")
		   (obj (input-port-name port))))
	     (cond
		((pregexp-match ";;; file-format: ([0-9]+)" line)
		 =>
		 (lambda (fmt) (string->number (cadr fmt))))
		((pregexp-match "([ \t]*" line)
		 (unread-string! line port))
		(else
		 (loop (read-line port))))))))
   
;*---------------------------------------------------------------------*/
;*    load-bbdb ...                                                    */
;*---------------------------------------------------------------------*/
(define (load-bbdb port %this)

   (define (xfield alist key def)
      (if (eq? alist 'nil)
	  def
	  (let ((c (assq key alist)))
	     (if (pair? c) (cdr c) def))))
	    
   (define (bbdb9-parse-record rec)
      (match-case rec
	 ((?firstname ?familyname
	     ?affix ?aka ?org ?phones
	     ?addrs ?emails ?xfields ?uid ?cdate ?stamp ?-)
	  (instantiate::vcard
	     (uid uid)
	     (familyname familyname)
	     (firstname firstname)
	     (nickname aka)
	     (org org)
	     (emails (if (eq? emails 'nil) '() emails))
	     (phones (if (eq? phones 'nil) '() phones))
	     (url (xfield xfields 'url #f))
	     (photo (xfield xfields 'face #f))
	     (related (xfield xfields 'signature #f))
	     (lang (xfield xfields 'language #f))
	     (key (xfield xfields 'pkey #f))
	     (x-color (xfield xfields 'color #f))
	     (xx-extras `(:cdate ,cdate :stmp ,stamp))))
	 (else
	  (bbdb6-parse-record rec))))
   
   (define (bbdb6-parse-record rec)
      (match-case rec
	 ((?firstname ?familyname
	     ?aka ?org ?phones ?addrs ?emails ?notes . ?-)
	  (instantiate::vcard
	     (familyname familyname)
	     (firstname firstname)
	     (nickname aka)
	     (org org)
	     (emails (if (eq? emails 'nil) '() emails))
	     (phones (if (eq? phones 'nil) '() phones))))
	 (else
	  '())))
   
   (let* ((fmt (bbdb-parse-format port))
	  (cards (map (if (>= fmt fmt 9)
			  bbdb9-parse-record
			  bbdb6-parse-record)
		    (read port))))
      (js-vector->jsarray (sort (list->vector cards) vcard<=?) %this)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*    -------------------------------------------------------------    */
;*    This is the function called by JavaScript when the Hop module    */
;*    is required. It binds the exports field of the newly             */
;*    allocated module                                                 */
;*---------------------------------------------------------------------*/
(define (hopscript %this this %scope %module)
   (with-access::JsGlobalObject %this (js-object)
      (let ((exports (js-new0 %this js-object)))
         (js-put! %module (& "exports") exports #f %this)
         ;; load
         (js-put! exports (& "load")
            (js-make-function %this
               ;; wrap the Hop read-csv records function into a JS function
               (lambda (this url)
		  (call-with-input-file url
		     (lambda (port)
			(load-bbdb port %this))))
	       (js-function-arity 1 0)
	       (js-function-info :name "load" :len 1))
	    #f %this)
	 exports)))
