/*=====================================================================*/
/*    serrano/prgm/project/hop/hop/node_modules/@types/hop.d.ts        */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Sun Mar 20 18:23:22 2022                          */
/*    Last change :  Tue Oct 11 08:15:40 2022 (serrano)                */
/*    Copyright   :  2022 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    Hop type declarations.                                           */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    info                                                             */
/*---------------------------------------------------------------------*/
export const engine: string;
export const isServer :boolean;
export const isWorker :boolean;
export const hostname :string;
export const version :string;
export const rcDirectory :string;
export const port: number;
export const ports: number[];
export const standalone: any;
export const sealed: any;

/*---------------------------------------------------------------------*/
/*    Responses                                                        */
/*---------------------------------------------------------------------*/
interface HTTPResponseFile {}
interface HTTPResponseString {}
interface HTTPResponseXML {}

/*---------------------------------------------------------------------*/
/*    Services                                                         */
/*---------------------------------------------------------------------*/
type HTTPResponse = HTTPResponseFile | HTTPResponseString | HTTPResponseXML;
type SvcResponse = HTTPResponse | XMLDocument | string | number;

type SvcFun = (any) => SvcResponse;
type Service = {};
export function Service(fun: SvcFun, name?: string): any;
