/*=====================================================================*/
/*    .../prgm/project/hop/hop/node_modules/hop/node/broadcast.mjs     */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Apr  2 11:20:11 2024                          */
/*    Last change :  Tue Apr  2 11:41:20 2024 (serrano)                */
/*    Copyright   :  2024 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    Server broadcast implementation                                  */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    The module                                                       */
/*---------------------------------------------------------------------*/
export { init, broadcast };

/*---------------------------------------------------------------------*/
/*    serverEventKey ...                                               */
/*---------------------------------------------------------------------*/
let serverEventKey = Date.now();
let websockets = [];

/*---------------------------------------------------------------------*/
/*    init ...                                                         */
/*---------------------------------------------------------------------*/
function init(config, ws, ServiceImpl) {
   
   const minPingTime = 30;

   function getServerEventKey(host) {
      return host + "//" + serverEventKey++;
   }
   
   function serverEventInfo(pingTime) {
      const host = this.header("host");
      return {
	 key: getServerEventKey(host),
	 host: host,
	 ssl: config.ports.https > 0,
	 pingTime: pingTime > minPingTime ? pintTime : minPingTime
      }
   }
   
   function serverEventWs() {
      // unused (see backend websocket init)
   }
      
   new ServiceImpl(serverEventInfo, "server/event-info");
   new ServiceImpl(serverEventWs, "server/event-ws");

   websockets = ws;
}

/*---------------------------------------------------------------------*/
/*    broadcast ...                                                    */
/*---------------------------------------------------------------------*/
function broadcast(sig, val) {
   console.log("websocket=", websockets);
}

