/*=====================================================================*/
/*    .../prgm/project/hop/3.7.x/node_modules/hop/node/auth.mjs        */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Mon Feb  5 18:06:12 2024                          */
/*    Last change :  Tue Feb  6 08:55:13 2024 (serrano)                */
/*    Copyright   :  2024 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    authentication and users                                         */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    Import/Export                                                    */
/*---------------------------------------------------------------------*/
import { config } from "./config.mjs";
import { existsSync, readFileSync } from "node:fs";
import * as path from  "node:path";

/*---------------------------------------------------------------------*/
/*    usersMap ...                                                     */
/*---------------------------------------------------------------------*/
const usersMap = new Map();

/*---------------------------------------------------------------------*/
/*    authentication ...                                               */
/*---------------------------------------------------------------------*/
function authentication(req) {
   return false;
}

/*---------------------------------------------------------------------*/
/*    authorizedService ...                                            */
/*    -------------------------------------------------------------    */
/*    Is service at URL authorized for this REQuest?                   */
/*---------------------------------------------------------------------*/
export function authorizedService(req, url) {
   if (!config.security.serviceAuthentication) {
      return true;
   } else {
      const user = authentication(req);

      return user && user.services.indexOf(url) >= 0;
   }
}

/*---------------------------------------------------------------------*/
/*    loadUserConfiguration ...                                        */
/*    -------------------------------------------------------------    */
/*    Executed _after_ config.mjs has been loaded.                     */
/*    -------------------------------------------------------------    */
/*    Performance does not matter.                                     */
/*---------------------------------------------------------------------*/
function loadUserConfiguration() {

   function starOrStringArray(v) {
      return (v === "*" || (Array.isArray(v) && v.every(s => typeof s === "string")));
   }
   
   function checkUser(u) {
      for (let k in u) {
	 switch (k) {
	    case "name":
	       if (typeof u.name !== "string") {
		  console.error(`warning: wrong user name "${u.name}"`);
		  return false;
	       } else if (usersMap.has(u.name)) {
		  console.error(`warning: user redefinition name "${u.name}"`);
		  return false;
	       }
	       break;
	       
	    case "services":
	    case "directories":
	       if (!starOrStringArray(u[k])) {
		  console.error(`warning: wrong ${k} "${u[k]}"`);
		  return false;
	       }
	       break;

	    default:
	       console.error(`warning: unknown user propperty "${k}"`);
	       return false;
	 }
      }
   }
	       
   if (!existsSync(config.userdb)) {
      console.error(`warning: userdb does not exists "${config.userdb}"`);
   } else {
      const users = JSON.parse(readFileSync(config.userdb));

      users.forEach(u => {
	 if (checkUser(u)) {
	    usersMap.add(u.name, u);
	 }
      });
   }
}

loadUserConfiguration();

