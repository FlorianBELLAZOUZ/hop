;*=====================================================================*/
;*    .../project/hop/hop/node_modules/systime/lib/_systime.hop        */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jul  6 06:15:53 2014                          */
;*    Last change :  Wed Jun 26 08:28:42 2024 (serrano)                */
;*    Copyright   :  2014-24 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    SYSTIME JS bindings                                              */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _systime

   (library hopscript hop nodejs)
   
   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this scope module)
   
   (define (js-tofixnum n %this)
      (let ((n (js-tointeger n %this)))
	 (cond
	    ((fixnum? n) n)
	    ((flonum? n) (flonum->fixnum n))
	    (else 0))))
   
   (&with!
      (with-access::JsGlobalObject %this (__proto__)
	 
	 (define exports (js-get module (& "exports") %this))
	 
	 ;; bind the module in the systime scope
	 (js-put! scope (& "module") module #f %this)
	 
	 ;; time
	 (js-bind! %this exports (& "time")
	    :value (js-make-function %this
		      (lambda (this proc)
			 (multiple-value-bind (res rtime stime utime)
			    (time (lambda () (js-call0 %this proc (js-undefined))))
			    (js-alist->jsobject
			       `((:res . ,res)
				 (:rtime . ,rtime)
				 (:stime . ,stime)
				 (:utime . ,utime))
			       %this)))
		      (js-function-arity 1 0)
		      (js-function-info :name "time" :len 1))
	    :writable #f
	    :enumerable #f))))

;*---------------------------------------------------------------------*/
;*    The return value for dynamic-load                                */
;*---------------------------------------------------------------------*/
hopscript

