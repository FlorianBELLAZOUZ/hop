/*=====================================================================*/
/*    serrano/prgm/project/hop/hop/node_modules/exif/node/mmap.mjs     */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Mar 26 11:35:21 2024                          */
/*    Last change :  Sun May  5 11:52:27 2024 (serrano)                */
/*    Copyright   :  2024 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    Fake mmap implementation for Node.                               */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    module                                                           */
/*---------------------------------------------------------------------*/
import { readFileSync, writeFileSync } from "node:fs";
export { Mmap };

/*---------------------------------------------------------------------*/
/*    Mmap ...                                                         */
/*---------------------------------------------------------------------*/
// @sealed
class Mmap {
   #path;
   #buf;
   #rindex = 0;
   #windex = 0;
   
   constructor(path, {write, read}) {
      this.#path = path;
      this.#buf = readFileSync(path);
   }

   get length() {
      return this.#buf.length;
   }

   close() {
   }

   ref(idx) {
      this.#rindex = idx + 1;
      return String.fromCharCode(this.#buf[idx]);
   }

   get() {
      return this.ref(this.#rindex);
   }

   get rindex() {
      return this.#rindex;
   }

   set rindex(index) {
      return this.#rindex = index;
   }
   
   get windex() {
      return this.#windex;
   }

   set windex(index) {
      return this.#windex = index;
   }

   toString(len, encoding = "latin1") {
      const rindex = this.#rindex;
      this.#rindex = rindex + len;
      return this.#buf.toString(encoding, rindex, this.#rindex);
   }
   
   substring(rindex, end) {
      this.#rindex = end;
      return this.#buf.toString("latin1", rindex, this.#rindex);
   }
}
