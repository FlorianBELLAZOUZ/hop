/*=====================================================================*/
/*    .../project/hop/hop/node_modules/fontifier/lib/fontifier.js      */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Dec 16 18:30:44 2014                          */
/*    Last change :  Wed May 26 09:37:08 2021 (serrano)                */
/*    Copyright   :  2014-21 Manuel Serrano                            */
/*    -------------------------------------------------------------    */
/*    HOP fontifier                                                    */
/*=====================================================================*/
"use hopscript";

/*---------------------------------------------------------------------*/
/*    Bigloo module clause to spawn hopjs FONTIFIER initialization     */
/*---------------------------------------------------------------------*/
const path = require( "path" );
const fs = require( "fs" );
const fontifier = require( "./_fontifier.hop" );

exports.c = fontifier.c;
exports.asm = fontifier.asm;
exports.javascript = fontifier.js;
exports.hopscript = fontifier.hopscript;
exports.hiphop = fontifier.hiphop;
exports.hss = fontifier.hss;
exports.hop = fontifier.hop;
exports.scheme = fontifier.hop;
exports.ebnf = fontifier.ebnf;
exports.plain = fontifier.plain;
exports.sh = fontifier.sh;
exports.xml = fontifier.xml;
exports.tex = fontifier.tex;
exports.lineNumber = fontifier.lineNumber;

exports.css = path.join( path.dirname( __dirname ), "hss/fontifier.hss" );

/*---------------------------------------------------------------------*/
/*    getTarget ...                                                    */
/*---------------------------------------------------------------------*/
function getTarget( file ) {
   const cache = path.join( require( hop.config ).cacheDir, "fontifier" );

   if( !fs.existsSync( cache ) ) {
      fs.mkdirSync( cache );
   } else if( !fs.statSync( cache ).isDirectory ) {
      throw `Not a directory ${cache}`;
   }

   return path.join( cache, path.basename( file, "js" ) +  "fontifier.js" );
}

/*---------------------------------------------------------------------*/
/*    Symbol.compiler ...                                              */
/*---------------------------------------------------------------------*/
exports[ Symbol.compiler ] = (file, options) => {
   const fd = fs.openSync( file, "r" );
   try {
      const data = fs.readFileSync( file, "utf8" );
      const target = (options && options.target)
	 || getTarget( file );
      
      fs.writeFileSync( target, data.replace( /#[^#]*#/g, "" ) );
      
      return {
	 type: "filename",
	 value: target, 
      };
   } catch( err ) {
      return {
	 type: "error",
	 value: err
      }
   } finally {
      fs.closeSync( fd );
   }
}
