;*=====================================================================*/
;*    .../prgm/project/hop/3.0.x/node_modules/wiki/lib/_wiki.hop       */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Thu Sep  7 17:29:41 2006                          */
;*    Last change :  Sun Jan 18 11:37:42 2015 (serrano)                */
;*    Copyright   :  2006-15 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    wiki parsing                                                     */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _wiki
   
   (library hopscript hop hopwidget nodejs)
   
   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))
	   
;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this scope module)
   (let ((exports (js-get module 'exports %this)))
      (js-bind! %this exports 'parse
	 :value (js-make-function %this
		   (lambda (this buffer charset)
		      (let ((ip (cond
				   ((isa? buffer JsFastBuffer)
				    (with-access::JsFastBuffer buffer (%data byteoffset length)
				       (let ((len (uint32->fixnum length))
					     (beg (uint32->fixnum byteoffset)))
					  (open-input-string %data
					     beg (+fx beg len)))))
				   ((isa? buffer JsSlowBuffer)
				    (with-access::JsSlowBuffer buffer (data)
				       (let ((len (js-get buffer 'length %this)))
					  (open-input-string data 0 len))))
				   (else
				    (open-input-string
				       (js-tostring buffer %this))))))
			 (wiki-input-port->hop ip
			    :syntax
			    (instantiate::wiki-syntax
			       (extension (lambda (in syntax charset)
					     (%js-eval in 'eval %this %this scope))))
			    :charset
			    (if (eq? charset (js-undefined))
				(hop-locale)
				(js-tostring charset %this)))))
		   3 'parse)
	 :writable #f
	 :enumerable #f)
      (js-bind! %this exports 'name
	 :value (js-make-function %this
		   (lambda (this expr)
		      (js-string->jsstring (wiki-name expr)))
		   1 'name)
	 :writable #f
	 :enumerable #f)
      exports))
