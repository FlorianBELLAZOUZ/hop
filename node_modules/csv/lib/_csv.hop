;*=====================================================================*/
;*    serrano/prgm/project/hop/hop/node_modules/csv/lib/_csv.hop       */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Thu Sep  6 15:19:35 2018                          */
;*    Last change :  Thu Feb 29 12:19:16 2024 (serrano)                */
;*    Copyright   :  2018-24 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    CSV Hop parser                                                   */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _csv
   (library hopscript hop hopwidget nodejs web csv)
   (export (hopscript %this this %scope %module)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*    -------------------------------------------------------------    */
;*    This is the function called by JavaScript when the Hop module    */
;*    is required. It binds the exports field of the newly             */
;*    allocated module                                                 */
;*---------------------------------------------------------------------*/
(define (hopscript %this this %scope %module)
   
   (define (literal->js v)
      (cond
	 ((string? v) (js-string->jsstring v))
	 ((number? v) (js-number->jsnumber v))
	 (else v)))
   
   (define (literal->js/enc enc)
      (let ((conv (charset-converter
		     (string->symbol (js-jsstring->string enc))
		     (hop-locale))))
	 (lambda (v)
	    (cond
	       ((string? v) (js-string->jsstring (conv v)))
	       ((number? v) (js-number->jsnumber v))
	       (else v)))))
   
   (with-access::JsGlobalObject %this (js-object)
      (let ((exports (js-new0 %this js-object)))
         (js-put! %module (& "exports") exports #f %this)
         ;; bind the load function is the pseudo javascript module
         (js-put! exports (& "load")
            (js-make-function %this
               ;; wrap the Hop read-csv records function into a JS function
               (lambda (this url sep encoding)
		  (call-with-input-file (js-tostring url %this)
		     (let ((conv (if (js-jsstring? encoding)
				     (literal->js/enc encoding)
				     literal->js))
			   (lexer (cond
				     ((eq? sep (& ",")) +csv-lexer+)
				     ((eq? sep (& ";")) +ssv-lexer+)
				     ((eq? sep (& "\t")) +tsv-lexer+)
				     ((eq? sep (& "|")) +psv-lexer+)
				     (else (error "csv" "Illegal separator" sep)))))
			(lambda (p)
			   (js-vector->jsarray
			      (apply vector
				 (map (lambda (row)
					 (js-vector->jsarray
					    (apply vector (map conv row))
					    %this))
				    (read-csv-records p lexer)))
			      %this)))))
	       (js-function-arity 3 0)
	       (js-function-info :name "load" :len 3))
	    #f %this))))
